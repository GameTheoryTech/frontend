{"version":3,"sources":["hooks/useTokenNoUnlockBeforeTransfer.ts","hooks/useTokenSetNoUnlockBeforeTransfer.ts","hooks/useZap.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","hooks/useEarnings.ts","hooks/useStakedBalance.ts","hooks/useStatsForPool.ts","hooks/useStakedBalanceOnMasonry.ts","hooks/useBanks.ts","hooks/useFetchMasonryAPR.ts","hooks/useEarningsOnMasonry.ts","hooks/useCashPriceInLastTWAP.ts","components/PageHeader/PageHeader.tsx","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","views/Cemetery/CemeteryCard.js","views/Cemetery/Cemetery.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","components/TokenInput/TokenInput.tsx","../node_modules/@mui/icons-material/QuestionMark.js","../node_modules/@mui/material/Table/TableContext.js","components/Value/Value.tsx","hooks/useStakedTokenPriceInDollars.ts"],"names":["useTokenNoUnlockBeforeTranfer","token","useState","noUnlock","setNoUnlock","tombFinance","useTombFinance","isUnlocked","fetchBalance","useCallback","a","noUnlockBeforeTransfer","myAccount","useEffect","catch","err","console","error","stack","refreshInterval","setInterval","config","clearInterval","useSetTokenNoUnlockBeforeTransfer","handleTransactionReceipt","useHandleTransactionReceipt","onSetTokenNoUnlockBeforeTransfer","setNoUnlockBeforeTransfer","useZap","bank","onZap","zappingToken","tokenName","amount","zapIn","depositTokenName","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","slowRefresh","useRefresh","DAI_TICKER","FTM","TOMB_TICKER","TOMB","TSHARE_TICKER","TSHARE","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","spender","ZapModal","onConfirm","onDismiss","decimals","balance","useTokenBalance","ftmBalance","getDisplayBalance","tombBalance","tshareBalance","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","tombFtmLpStats","useLpStats","tShareFtmLpStats","tombLPStats","tshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","toString","handleSelectMax","Modal","text","InputLabel","id","style","textAlign","className","Select","onChange","event","target","labelId","marginBottom","MenuItem","TokenInput","onSelectMax","max","Typography","variant","marginTop","color","align","Number","toFixed","ModalActions","Button","onClick","component","useEarnings","poolName","earnTokenName","poolId","setBalance","earnedFromBank","refreshBalance","useStakedBalance","stakedBalanceOnBank","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","useStakedBalanceOnMasonry","getStakedSharesOnMasonry","useBanks","useContext","BanksContext","banks","useFetchMasonryAPR","apr","setApr","dpr","setDpr","getMasonryAPR","getMasonryDPR","fetchMasonryAPR","useEarningsOnMasonry","getEarningsOnMasonry","useCashPriceInLastTWAP","price","setPrice","fetchCashPrice","getTombPriceInLastTWAP","StyledPageHeader","styled","div","props","theme","spacing","StyledTitle","h1","grey","StyledSubtitle","h3","PageHeader","icon","subtitle","title","useHarvest","onReward","harvest","contract","Harvest","rewardsLocked","classname","earnings","useTokenNoUnlockBeforeTransfer","tombStats","useTombStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","Card","CardContent","Box","CardIcon","TokenSymbol","earnToken","Value","disabled","eq","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useWithdraw","onWithdraw","unstake","DepositModal","fullBalance","getFullDisplayBalance","WithdrawModal","withdrawPercentage","useStyles","makeStyles","button","width","height","fontSize","padding","minWidth","Stake","classes","useApprove","approveStatus","tokenBalance","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","handleModalClose","onCloseModal","fontWeight","fullWidth","onHandleModal","closedForStaking","marginLeft","marginRight","useBank","contractName","find","page","useRedeem","onRedeem","exit","section","boxed","overflow","position","content","background","left","bottom","transform","boxShadow","boxClear","border","backdropFilter","paddingBottom","advanced","paddingTop","display","boxed2","borderRadius","flexDirection","textShadow","numberWithCommas","x","replace","BankNotFound","Center","Bank","window","scrollTo","bankId","useParams","account","useWallet","statsOnPool","React","AdvancedOpen","setAdvancedOpen","onCloseRewards","onHandleRewards","onCloseStats","onHandleStats","Grid","container","justifyContent","item","xs","md","yearlyAPR","locked","dailyAPR","cursor","verticalAlign","TableContainer","Paper","Table","TableBody","TableRow","TableCell","TVL","fee","UnlockWallet","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","name","overridesResolver","styles","root","overflowX","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableUtilityClass","TableRoot","stickyHeader","borderCollapse","borderSpacing","typography","body2","palette","secondary","captionSide","defaultComponent","size","slots","table","TableContext","Provider","children","role","getTableBodyUtilityClass","TableBodyRoot","tablelvl2","Tablelvl2Context","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","outline","hover","backgroundColor","action","selected","alpha","primary","main","selectedOpacity","hoverOpacity","getTableCellUtilityClass","tableCellClasses","TableCellRoot","capitalize","borderBottom","mode","lighten","divider","darken","lineHeight","pxToRem","fontWeightMedium","paddingCheckbox","top","zIndex","default","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","blueGlow","CemeteryCard","stakedPriceInDollars","stakedInDollars","to","textDecoration","Cemetery","path","useRouteMatch","activeBanks","filter","finished","rebateStats","useTreasury","bondBalance","HODL","cashPrice","Page","exact","maxwidth","sectionInUI","map","Fragment","outOfBootstrap","tombPrice","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","styleButton","borderTopLeftRadius","borderBottomLeftRadius","toLocaleString","Input","endAdornment","placeholder","_interopRequireDefault","require","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","StyledValue","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars"],"mappings":"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","file":"static/js/13.e6641145.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useTokenNoUnlockBeforeTranfer = (token: ERC20Lockable) => {\r\n  const [noUnlock, setNoUnlock] = useState(false);\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setNoUnlock(await token.noUnlockBeforeTransfer(tombFinance?.myAccount));\r\n  }, [token, tombFinance?.myAccount]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(`Failed to fetch token lock: ${err.stack}`));\r\n      let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [isUnlocked, token, fetchBalance, tombFinance]);\r\n\r\n  return noUnlock;\r\n};\r\n\r\nexport default useTokenNoUnlockBeforeTranfer;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport useHandleTransactionReceipt from \"./useHandleTransactionReceipt\";\r\n\r\nconst useSetTokenNoUnlockBeforeTransfer = (token: ERC20Lockable) => {\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleSetTokenNoUnlockBeforeTransfer = useCallback(\r\n      () => {\r\n        handleTransactionReceipt(\r\n            token.setNoUnlockBeforeTransfer(true),\r\n            `Approve Unlock On Claim`,\r\n        );\r\n      },\r\n      [token, handleTransactionReceipt],\r\n  );\r\n  return { onSetTokenNoUnlockBeforeTransfer: handleSetTokenNoUnlockBeforeTransfer };\r\n};\r\n\r\nexport default useSetTokenNoUnlockBeforeTransfer;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useZap = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleZap = useCallback(\r\n    (zappingToken: string, tokenName: string, amount: string) => {\r\n      handleTransactionReceipt(\r\n        tombFinance?.zapIn(zappingToken, tokenName, amount),\r\n        `Zap ${amount} in ${bank.depositTokenName}.`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onZap: handleZap };\r\n};\r\n\r\nexport default useZap;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport { DAI_TICKER, TOMB_TICKER, TSHARE_TICKER, ZAPPER_ROUTER_ADDR } from '../utils/constants';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  let token: ERC20;\r\n  if (zappingToken === DAI_TICKER) token = tombFinance?.FTM;\r\n  else if (zappingToken === TOMB_TICKER) token = tombFinance?.TOMB;\r\n  else if (zappingToken === TSHARE_TICKER) token = tombFinance?.TSHARE;\r\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\r\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, tombFinance, slowRefresh]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: ZAPPER_ROUTER_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction, slowRefresh]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveZapper;\r\n","import React, { useState, useMemo } from 'react';\r\n\r\nimport { Button, Select, MenuItem, InputLabel, Typography } from '@mui/material';\r\nimport { withStyles } from '@mui/styles'\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport styled from 'styled-components';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport Label from '../../../components/Label';\r\nimport useLpStats from '../../../hooks/useLpStats';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport { useWallet } from 'use-wallet';\r\nimport useApproveZapper, { ApprovalState } from '../../../hooks/useApproveZapper';\r\nimport { TOMB_TICKER, TSHARE_TICKER, DAI_TICKER } from '../../../utils/constants';\r\nimport { Alert } from '@mui/lab';\r\nimport useRefresh from \"../../../hooks/useRefresh\";\r\n\r\ninterface ZapProps extends ModalProps {\r\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\n// create function for string convert to 4 decimal places\r\nconst convertTo4Decimals = (amount: Number) => {\r\n  return amount.toFixed(4);\r\n}\r\n\r\nconst ZapModal: React.FC<ZapProps> = ({ onConfirm, onDismiss, tokenName = '', decimals = 18 }) => {\r\n  const tombFinance = useTombFinance();\r\n  const balance = useTokenBalance(tombFinance?.FTM);\r\n  const ftmBalance = getDisplayBalance(balance);\r\n  const tombBalance = useTokenBalance(tombFinance?.TOMB);\r\n  const tshareBalance = useTokenBalance(tombFinance?.TSHARE);\r\n  const [val, setVal] = useState('');\r\n  const [zappingToken, setZappingToken] = useState(DAI_TICKER);\r\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\r\n  const [estimate, setEstimate] = useState({ token0: '0', token1: '0' }); // token0 will always be FTM in this case\r\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\r\n  const tombFtmLpStats = useLpStats('GAME-DAI-LP');\r\n  const tShareFtmLpStats = useLpStats('THEORY-DAI-LP');\r\n  const tombLPStats = useMemo(() => (tombFtmLpStats ? tombFtmLpStats : null), [tombFtmLpStats]);\r\n  const tshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\r\n  const ftmAmountPerLP = tokenName.startsWith(TOMB_TICKER) ? tombLPStats?.ftmAmount : tshareLPStats?.ftmAmount;\r\n  if(zappingToken === DAI_TICKER && zappingTokenBalance !== ftmBalance) setZappingTokenBalance(ftmBalance);\r\n  /**\r\n   * Checks if a value is a valid number or not\r\n   * @param n is the value to be evaluated for a number\r\n   * @returns\r\n   */\r\n  function isNumeric(n: any) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  const handleChangeAsset = (event: any) => {\r\n    const value = event.target.value;\r\n    setZappingToken(value);\r\n    setZappingTokenBalance(ftmBalance);\r\n    if (event.target.value === TSHARE_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tshareBalance, decimals));\r\n    }\r\n    if (event.target.value === TOMB_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tombBalance, decimals));\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setVal(e.currentTarget.value);\r\n      setEstimate({ token0: '0', token1: '0' });\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setVal(e.currentTarget.value);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  const handleSelectMax = async () => {\r\n    setVal(zappingTokenBalance);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  return (\r\n    <Modal text={`Create ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n\r\n      <InputLabel id=\"label\" style={{textAlign: 'center'}} className=\"textGlow\">\r\n        Select asset to use\r\n      </InputLabel>\r\n      <Select\r\n        onChange={handleChangeAsset}\r\n        labelId=\"label\"\r\n        id=\"select\"\r\n        value={zappingToken}\r\n        style={{marginBottom: '20px'}}\r\n      >\r\n        <MenuItem value={TOMB_TICKER}>GAME</MenuItem>\r\n        <MenuItem value={DAI_TICKER}>DAI</MenuItem>\r\n        <MenuItem value={TSHARE_TICKER}>THEORY</MenuItem>\r\n      </Select>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={zappingTokenBalance}\r\n        symbol={zappingToken}\r\n      />\r\n      <Typography variant=\"h5\" style={{textAlign: 'center', marginTop: '20px', marginBottom: '10px'}}>\r\n        Estimated {tokenName} tokens\r\n      </Typography>\r\n      <Typography variant=\"h3\" color=\"var(--extra-color-2)\" align='center'>\r\n        {' '}\r\n        {convertTo4Decimals(Number(estimate.token0) / Number(ftmAmountPerLP))}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className=\"textGlow\" align=\"center\">\r\n        {' '}\r\n        ({Number(estimate.token0).toFixed(4)} {DAI_TICKER} / {Number(estimate.token1).toFixed(4)}{' '}\r\n        {tokenName.startsWith(TOMB_TICKER) ? TOMB_TICKER : TSHARE_TICKER}){' '}\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\r\n          }\r\n        >\r\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant='h4' component=\"p\" style={{textAlign: 'center', marginTop: '40px', marginBottom: '20px'}}>\r\n        After creating tokens,<br />deposit them in the liquidity pool.\r\n      </Typography>\r\n      <Typography variant='body1' className=\"textGlow\" style={{textAlign: 'center'}}>\r\n        Zapping incurs a 0.5% convenience fee and 0.5% slippage.<br />Beta feature. Use at your own risk!\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ZapModal;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.earnedFromBank(poolName, earnTokenName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.stakedBalanceOnBank(poolName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport { PoolStats } from '../tomb-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await tombFinance?.getPoolAPRs(bank));\r\n  }, [tombFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APRs for pool: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, tombFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useStakedBalanceOnMasonry = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance?.getStakedSharesOnMasonry());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [slowRefresh, isUnlocked, tombFinance]);\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalanceOnMasonry;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const { banks } = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useFetchMasonryAPR = () => {\r\n  const [apr, setApr] = useState<number>(0);\r\n  const [dpr, setDpr] = useState<number>(0);\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh(); \r\n\r\n  useEffect(() => {\r\n    async function fetchMasonryAPR() {\r\n      try {\r\n        setApr(await tombFinance?.getMasonryAPR());\r\n        setDpr(await tombFinance?.getMasonryDPR());\r\n      } catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n   fetchMasonryAPR();\r\n  }, [setApr, setDpr, tombFinance, slowRefresh]);\r\n\r\n  return {apr,dpr};\r\n};\r\n\r\nexport default useFetchMasonryAPR;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useEarningsOnMasonry = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance?.getEarningsOnMasonry());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarningsOnMasonry;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance?.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 610px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[100]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { Bank } from '../tomb-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      tombFinance?.harvest(bank.contract, bank.poolId),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onReward: handleReward };\r\n};\r\n\r\nexport default useHarvest;\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { Button, Card, CardContent, Box, Typography } from '@mui/material';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\nimport useTombStats from '../../../hooks/useTombStats';\r\nimport useShareStats from '../../../hooks/usetShareStats';\r\nimport useTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenNoUnlockBeforeTransfer\";\r\nimport useSetTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenSetNoUnlockBeforeTransfer\";\r\nimport useTombFinance from \"../../../hooks/useTombFinance\";\r\n\r\ninterface HarvestProps {\r\n  bank: Bank;\r\n  rewardsLocked : number;\r\n  classname: string;\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({ bank, rewardsLocked, classname }) => {\r\n  const tombFinance = useTombFinance();\r\n  const noUnlock = useTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const { onSetTokenNoUnlockBeforeTransfer } = useSetTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const { onReward } = useHarvest(bank);\r\n  const tombStats = useTombStats();\r\n  const tShareStats = useShareStats();\r\n\r\n  const tokenName = bank.earnTokenName === 'THEORY' ? 'THEORY' : 'GAME';\r\n  const tokenStats = bank.earnTokenName === 'THEORY' ? tShareStats : tombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n\r\n  classname = classname || '';\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n        <Box style={{marginBottom: '20px'}}>\r\n          <CardIcon>\r\n            <TokenSymbol symbol={bank.earnToken.symbol} />\r\n          </CardIcon>\r\n        </Box>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={getDisplayBalance(earnings)} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${earnedInDollars}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n            Total Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={`${(Number(getDisplayBalance(earnings)) * (100.0-rewardsLocked) / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n          ${(Number(earnedInDollars) * (100.0-rewardsLocked) / 100.0).toFixed(2)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          {tokenName} Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n            <Value value={`${(Number(getDisplayBalance(earnings)) * rewardsLocked / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${(Number(earnedInDollars) * rewardsLocked / 100.0).toFixed(2)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          L{tokenName} Earned\r\n        </Typography>\r\n\r\n        <Box className=\"buttonWrap\">\r\n          <Button\r\n              onClick={onReward}\r\n              variant=\"contained\"\r\n              disabled={earnings.eq(0)}\r\n          >\r\n            Claim Rewards\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Harvest;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.stake(bank.contract, bank.poolId, amountBn),\r\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useWithdraw = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.unstake(bank.contract, bank.poolId, amountBn),\r\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract} `,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onWithdraw: handleWithdraw };\r\n};\r\n\r\nexport default useWithdraw;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  decimals: number;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, decimals, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal text={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Deposit\r\n        </Button>\r\n      </ModalActions>\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n        Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n  withdrawPercentage?: string;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', decimals = 18, withdrawPercentage }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  withdrawPercentage = withdrawPercentage || '';\r\n\r\n  return (\r\n    <Modal text={`Withdraw ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Typography variant=\"h6\" component=\"p\" style={{marginTop: '20px'}} align=\"center\">\r\n        Current Withdrawal Fee: {withdrawPercentage}%              \r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Withdraw\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n        Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React, { useMemo, useContext } from 'react';\r\n\r\nimport { Box, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport QuestionMark from '@mui/icons-material/QuestionMark';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useStake from '../../../hooks/useStake';\r\nimport useZap from '../../../hooks/useZap';\r\nimport useStakedBalance from '../../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useWithdraw from '../../../hooks/useWithdraw';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport ZapModal from './ZapModal';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\n\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  }\r\n}));\r\n\r\ninterface StakeProps {\r\n  bank: Bank;\r\n  withdrawPercentage: string;\r\n  classname: string;\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ bank, withdrawPercentage, classname }) => {\r\n  classname = classname || '';\r\n  withdrawPercentage = withdrawPercentage || '';\r\n  const classes = useStyles();\r\n\r\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\r\n\r\n  const tokenBalance = useTokenBalance(bank.depositToken);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const earnedInDollars = (\r\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n  const { onStake } = useStake(bank);\r\n  const { onZap } = useZap(bank);\r\n  const { onWithdraw } = useWithdraw(bank);\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onStake(amount);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentZap, onDissmissZap] = useModal(\r\n    <ZapModal\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(zappingToken, tokenName, amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onZap(zappingToken, tokenName, amount);\r\n        onDissmissZap();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      withdrawPercentage={withdrawPercentage}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onWithdraw(amount);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const handleModalClose = () => {\r\n    onCloseModal();\r\n  };\r\n  \r\n  const [onHandleModal, onCloseModal] = useModal(\r\n    <Modal text=\"Withdrawal Fee\" onDismiss={handleModalClose}>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n        Your withdrawal fee for each pool changes the longer your tokens are staked, from your initial deposit or last withdrawal.\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n      <strong>The fees are as follows:</strong>\r\n        <ul style={{marginTop:'10px'}}>\r\n          <li>1 block (30 seconds) = 25%</li>\r\n          <li>less than 1 hour = 8%</li>\r\n          <li>less than 1 day = 4%</li>\r\n          <li>less than 3 days = 2%</li>\r\n          <li>less than 5 days = 1%</li>\r\n          <li>less than 2 weeks = 0.5%</li>\r\n          <li>less than 4 weeks = 0.25%</li>\r\n          <li>4 weeks and longer  = 0.01%</li>\r\n        </ul>\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\">\r\n        Depositing or Claiming tokens does not reset your withdrawal fee.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleModalClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n\r\n      <Box style={{marginBottom: '20px'}}>\r\n        <CardIcon>\r\n          <TokenSymbol symbol={bank.depositToken.symbol} />\r\n        </CardIcon>\r\n      </Box>\r\n\r\n      <Typography variant=\"h4\">\r\n        <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\r\n      </Typography>\r\n      <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n        ${earnedInDollars}\r\n      </Typography>\r\n      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n        {bank.depositTokenName} Staked\r\n      </Typography>\r\n\r\n            {approveStatus !== ApprovalState.APPROVED ? (\r\n              <Button\r\n                disabled={\r\n                  bank.closedForStaking ||\r\n                  approveStatus === ApprovalState.PENDING ||\r\n                  approveStatus === ApprovalState.UNKNOWN\r\n                }\r\n                onClick={approve}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: '20px' }}\r\n              >\r\n                {`Approve ${bank.depositTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Box className=\"buttonWrap\">\r\n                  <Typography variant=\"body1\" component=\"p\" style={{marginBottom: '20px'}}>\r\n                    Current Withdrawal Fee {withdrawPercentage}%\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleModal}>\r\n                      <QuestionMark fontSize=\"inherit\" />\r\n                    </Button>\r\n                  </Typography>\r\n\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking || bank.depositTokenName === 'GAME-DAI-LP'}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\r\n                  style={{width: '100%', marginBottom: '20px'}}\r\n                >\r\n                  <span>Create Liquidity Pool Tokens</span>\r\n                  {/*<FlashOnIcon style={{ color: '#fff', marginLeft: '10px' }} />*/}\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={onPresentWithdraw} style={{width: \"calc(50% - 7.5px)\",marginRight: '15px'}}>\r\n                  Withdraw\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\r\n                  style={{width: \"calc(50% - 7.5px)\"}}\r\n                >\r\n                  Deposit\r\n                </Button>\r\n\r\n                </Box>\r\n              </>\r\n            )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\nimport { Bank, ContractName } from '../tomb-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const { banks } = useContext(BanksContext);\r\n  return banks.find((bank) => bank.page === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useRedeem = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleRedeem = useCallback(() => {\r\n    handleTransactionReceipt(tombFinance?.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onRedeem: handleRedeem };\r\n};\r\n\r\nexport default useRedeem;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport { Box, Button, Card, CardContent, Typography, Grid, Paper } from '@mui/material';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport { ExpandMore as ChevronDownIcon } from '@mui/icons-material';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useBank from '../../hooks/useBank';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport useRedeem from '../../hooks/useRedeem';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport useModal from '../../hooks/useModal';\r\nimport Modal, { ModalProps } from '../../components/Modal';\r\nimport ModalActions from '../../components/ModalActions';\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  },\r\n  boxed : {\r\n    overflow: 'initial',\r\n    '& .info-wrap': {\r\n      position: 'relative',\r\n      '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: '2px',\r\n        height: 'calc(100% - 20px)',\r\n        background: 'var(--extra-color-1)',\r\n        left: '50%',\r\n        bottom: '0',\r\n        transform: 'translateX(-50%)',\r\n        boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n\r\n      }\r\n    }\r\n  },\r\n  boxClear: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    backdropFilter: 'none',\r\n    '& > *': {\r\n      padding: '0',\r\n      '&:last-child': {\r\n        paddingBottom: '0'\r\n      }\r\n    },\r\n  },\r\n  advanced: {\r\n    textAlign: 'center',\r\n    '& .advanced-toggle' : {\r\n      paddingTop: '20px',\r\n      paddingBottom: '20px',\r\n    },\r\n    '& .advanced-info' : {\r\n      display: 'none',\r\n      marginBottom: '20px'\r\n    },\r\n    '&.open' : {\r\n      '& .advanced-info' : {\r\n        display: 'block',\r\n      },\r\n      '& .advanced-toggle' : {\r\n        '& svg' : {\r\n          transform: 'rotate(180deg)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  boxed2 : {\r\n    position: 'relative',\r\n    border: '0',\r\n    boxShadow: \"none\",\r\n    overflow: 'initial',\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      left: '0',\r\n      width: 'calc(100% - 4px)',\r\n      height: 'calc(100% - 34px)',\r\n      border: '2px solid var(--extra-color-1)',\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      paddingTop: '0',\r\n      height: 'calc(100% - 30px)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      '&:last-child': {\r\n        paddingBottom: '30px'\r\n      },\r\n      '& .buttonWrap': {\r\n        marginTop: 'auto'\r\n      }\r\n    },\r\n    '& .blueGlow': {\r\n      color: 'var(--extra-color-1)',\r\n      textShadow: '0px 0px 20px var(--extra-color-1)'\r\n    }\r\n  },\r\n}));\r\n\r\nconst numberWithCommas = (x: { toString: () => string; }) => {\r\n  if(x === null) return x;\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n//TODO: Get deposit fee from contract?\r\nconst Bank: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const classes = useStyles();\r\n  const { bankId } = useParams();\r\n  const bank = useBank(bankId);\r\n\r\n  const { account } = useWallet();\r\n  const { onRedeem } = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n\r\n  const [AdvancedOpen, setAdvancedOpen] = React.useState(false);\r\n\r\n  const handleAdvancedOpen = () => {\r\n    (AdvancedOpen === false) ? setAdvancedOpen(true) : setAdvancedOpen(false);\r\n  };\r\n\r\n  const handleRewardsClose = () => {\r\n    onCloseRewards();\r\n  };\r\n  \r\n  const [onHandleRewards, onCloseRewards] = useModal(\r\n    <Modal text=\"Rewards\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>THEORY</strong><br />Are THEORY tokens which are available to you straight away.<br /><br />\r\n      <strong>LTHEORY</strong><br />Locked THEORY Tokens are claimable however they are locked until March 24th, 2023. They then take 12 months to fully unlock.<br /><br />\r\n      <strong>Unlocking LTHEORY</strong><br />some LTHEORY tokens can be unlocked early by using an NFT.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleRewardsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  const handleStatsClose = () => {\r\n    onCloseStats();\r\n  };\r\n  \r\n  const [onHandleStats, onCloseStats] = useModal(\r\n    <Modal text=\"Advanced Stats\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>LTHEORY %</strong><br />The percentage of your rewards if you claim that will be in Locked THEORY Tokens. This percentage decreases by 2% every week until March 24th, 2023 when all THEORY tokens will have been distributed.<br /><br />\r\n\r\n      <strong>Total Value Locked</strong><br />The total USD value of tokens staked in the pool.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleStatsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return account && bank ? (\r\n    <>\r\n      <div className=\"section\">\r\n      <Typography align=\"center\" variant=\"h2\" component=\"h1\" className=\"textGlow pink\" style={{marginBottom: '20px'}}>\r\n        {bank?.depositTokenName.replace('LP', '')} Liquidity Pool\r\n      </Typography>\r\n      <Typography align=\"center\" variant=\"h5\" component=\"p\" style={{marginBottom: '50px', fontWeight: '500'}}>\r\n        Deposit {bank?.depositTokenName} tokens & earn {bank?.earnTokenName}\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\" spacing={3} style={{marginBottom: '30px'}}>\r\n            <Grid item xs={12} md={6}>\r\n              <div>\r\n              <Card className={classes.boxed}>\r\n                <CardContent>\r\n                  <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                    Rewards\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleRewards}>\r\n                      <QuestionMarkIcon fontSize='inherit' />\r\n                    </Button>\r\n                  </Typography>\r\n                  <div className='info-wrap'>\r\n                  <Grid container justifyContent=\"center\" spacing={3}>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              </div>\r\n              <div className={`${classes.advanced} ${AdvancedOpen ? 'open' : ''}`}>\r\n                <div className='advanced-toggle' onClick={handleAdvancedOpen}>\r\n                  <Typography align=\"center\" style={{display: 'inline-block',cursor: 'pointer', fontWeight: '700'}} className=\"textGlow pink\">\r\n                    <span style={{verticalAlign: 'middle'}}>{AdvancedOpen ? \"Hide Advanced\" : \"Show Advanced\"}</span>\r\n                    <ChevronDownIcon style={{verticalAlign: 'middle'}} />\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"advanced-info\">\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '10px'}}>\r\n                        Advanced Stats\r\n                        <Button variant=\"contained\" className={classes.button} aria-label=\"Advanced stats info\" style={{ marginLeft: '10px' }} onClick={onHandleStats}>\r\n                          <QuestionMarkIcon fontSize='inherit' />\r\n                        </Button>\r\n                      </Typography>\r\n                      <Grid container justifyContent=\"center\">\r\n                        <TableContainer component={Paper} style={{width: 'initial'}}>\r\n                          <Table aria-label=\"advanced info table\">\r\n                            <TableBody>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    L{bank.earnTokenName} %\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    {statsOnPool?.locked}%\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    Total Value Locked\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    ${numberWithCommas(statsOnPool?.TVL || '0.00')}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid item xs={12} md={4}>\r\n          <Harvest bank={bank} rewardsLocked={Number(statsOnPool?.locked)} classname=\"boxed\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Stake bank={bank} withdrawPercentage={statsOnPool?.fee} classname=\"boxed\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      </div>\r\n    </>\r\n  ) : !bank ? (\r\n    <BankNotFound />\r\n  ) : (\r\n    <UnlockWallet />\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"Please return to the homepage and try again later.\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Bank;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Card, CardContent, Typography, Grid } from '@mui/material';\r\n\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport CardIcon from '../../components/CardIcon';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\n\r\nimport useStakedBalance from '../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../hooks/useStakedTokenPriceInDollars';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\n\r\nimport useTombStats from '../../hooks/useTombStats';\r\nimport useShareStats from '../../hooks/usetShareStats';\r\nimport useEarnings from '../../hooks/useEarnings';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  blueGlow: {\r\n    color: 'var(--extra-color-1)',\r\n    textShadow: '0px 0px 20px var(--extra-color-1)'\r\n  },\r\n}));\r\n\r\nconst CemeteryCard = ({ bank, classname }) => {\r\n  classname = classname || '';\r\n  const classes = useStyles();\r\n\r\n  const statsOnPool = useStatsForPool(bank);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const stakedPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const stakedInDollars = (\r\n    Number(stakedPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const tombStats = useTombStats();\r\n  const tShareStats = useShareStats();\r\n  const tokenStats = bank.earnTokenName === 'THEORY' ? tShareStats : tombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n\r\n  const numberWithCommas = (x) => {\r\n    if(x === null) return x;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Card className={classname}>\r\n        <CardContent align=\"center\">\r\n          <Link to={`/farms/${bank.page}`} style={{textDecoration: 'none',color: 'inherit'}}>\r\n            <Box className=\"icon-pools\" style={{marginBottom: '20px'}}>\r\n              <CardIcon>\r\n                <TokenSymbol symbol={bank.depositTokenName} />\r\n              </CardIcon>\r\n              <CardIcon>\r\n                <TokenSymbol symbol=\"DAI\" />\r\n              </CardIcon>\r\n            </Box>\r\n            <Typography variant=\"h4\" className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n              {bank.depositTokenName.replace('LP', '')} Pool\r\n            </Typography>\r\n            <Typography variant=\"body1\" style={{marginBottom: '20px'}}>\r\n              {/* {bank.name} */}\r\n              Deposit {bank.depositTokenName} tokens and Earn {` ${bank.earnTokenName}`}\r\n            </Typography>\r\n            <div className='info-wrap'>\r\n              <Grid container spacing={3}>\r\n\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                    {numberWithCommas(bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR || '0.00')}%\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Yearly Rewards</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                    {numberWithCommas(bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR || '0.00')}%\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Daily Rewards</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                    ${numberWithCommas(stakedInDollars || '0.00')}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Staked Value</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                    ${numberWithCommas(earnedInDollars || '0.00')}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Total Earned</Typography>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CemeteryCard;\r\n","import React, { useMemo } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { Route, Switch, useRouteMatch, Link } from 'react-router-dom';\r\nimport Bank from '../Bank';\r\n\r\nimport { Box, Paper, Card, CardContent, Typography, Grid } from '@mui/material';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\nimport CemeteryCard from './CemeteryCard';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport CardIcon from '../../components/CardIcon';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\n\r\nimport useBanks from '../../hooks/useBanks';\r\nimport useTreasury from \"../../hooks/useTreasury\";\r\nimport useFetchMasonryAPR from '../../hooks/useFetchMasonryAPR';\r\nimport useEarningsOnMasonry from '../../hooks/useEarningsOnMasonry';\r\n\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport useTombStats from '../../hooks/useTombStats';\r\n\r\nimport useStakedTokenPriceInDollars from '../../hooks/useStakedTokenPriceInDollars';\r\nimport useStakedBalanceOnMasonry from '../../hooks/useStakedBalanceOnMasonry';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\n\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n}));\r\n\r\nconst Cemetery = () => {\r\n  const [banks] = useBanks();\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const activeBanks = banks.filter((bank) => !bank.finished);\r\n  const classes = useStyles();\r\n  const { apr, dpr } = useFetchMasonryAPR();\r\n  const rebateStats = useTreasury()\r\n\r\n  const tombStats = useTombStats();\r\n  const earnings = useEarningsOnMasonry();\r\n\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tombStats ? Number(tombStats.priceInDollars).toFixed(2) : null),\r\n    [tombStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings)));\r\n\r\n  const tombFinance = useTombFinance();\r\n  const stakedBalance = useStakedBalanceOnMasonry();\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('THEORY', tombFinance.TSHARE);\r\n  const stakedPriceInDollars = useMemo(\r\n    () =>\r\n      stakedTokenPriceInDollars\r\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance)))\r\n        : null,\r\n    [stakedTokenPriceInDollars, stakedBalance],\r\n  );\r\n\r\n  const bondBalance = useTokenBalance(tombFinance?.HODL);\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n\r\n  const priceWithCommas = (x) => {\r\n    if(x === null) return x;\r\n    return x.toLocaleString('en-US');\r\n  }\r\n\r\n  const numberWithCommas = (x) => {\r\n    if(x === null) return x;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <Route exact path={path}>\r\n          {!!account ? (\r\n            <Paper maxwidth=\"lg\" className=\"section\">\r\n\r\n\r\n              <Typography align=\"center\" variant=\"h2\" className=\"textGlow pink\" style={{marginBottom: '50px'}}>\r\n                Liquidity Pools\r\n              </Typography>\r\n\r\n              <Grid container justifyContent=\"center\" spacing={3}>\r\n\r\n                {activeBanks\r\n                  .filter((bank) => bank.sectionInUI === 2)\r\n                  .map((bank) => (\r\n                    <React.Fragment key={bank.name}>\r\n                      <CemeteryCard bank={bank} classname=\"boxed link\" />\r\n                    </React.Fragment>\r\n                ))}\r\n              </Grid>\r\n\r\n    \r\n              <Typography align=\"center\" variant=\"h2\" className=\"textGlow pink\" style={{marginTop: '100px', marginBottom: '50px'}}>\r\n                THEORY Staking Pool\r\n              </Typography>\r\n\r\n              <Grid container justifyContent=\"center\" spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Card className=\"boxed link\">\r\n                    <CardContent align=\"center\">\r\n                      <Link to=\"/theoretics\" style={{textDecoration: 'none',color: 'inherit'}}>\r\n                      <Box style={{marginBottom: '20px'}}>\r\n                        <CardIcon>\r\n                          <TokenSymbol symbol=\"TSHARE\" />\r\n                        </CardIcon>\r\n                      </Box>\r\n                      <Typography variant=\"h4\" className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                        Theoretics Pool\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" style={{marginBottom: '20px'}}>\r\n                        Deposit THEORY & earn GAME when GAME price is above $1.01\r\n                      </Typography>\r\n                      <div className='info-wrap'>\r\n                      <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            {numberWithCommas((!rebateStats.outOfBootstrap || rebateStats.tombPrice >= 1.01) ? apr.toFixed(2) : \"0.00\")}%\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Yearly Rewards</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            {numberWithCommas((!rebateStats.outOfBootstrap || rebateStats.tombPrice >= 1.01) ? dpr.toFixed(2) : \"0.00\")}%\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Daily Rewards</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            ${numberWithCommas(stakedPriceInDollars.toFixed(2))}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Staked Value</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            ${numberWithCommas(earnedInDollars.toFixed(2))}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Total Earned</Typography>\r\n                        </Grid>\r\n\r\n                      </Grid>\r\n                      </div>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container justifyContent=\"center\" spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Card className=\"boxed link\">\r\n                    <CardContent align=\"center\">\r\n                      <Link to=\"/dungeon\" style={{textDecoration: 'none',color: 'inherit'}}>\r\n                        <Box style={{marginBottom: '20px'}}>\r\n                          <CardIcon>\r\n                            <TokenSymbol symbol=\"MASTER\" />\r\n                          </CardIcon>\r\n                        </Box>\r\n                        <Typography variant=\"h4\" className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                          Dungeon Pool\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" style={{marginBottom: '20px'}}>\r\n                          Lock up THEORY for 1 year, receive MASTER, & earn bonuses and GAME when GAME price is above $1.01\r\n                        </Typography>\r\n                        <div className='info-wrap'>\r\n                          <Grid container spacing={3}>\r\n\r\n                            <Grid item xs={6}>\r\n                              <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                                {numberWithCommas((!rebateStats.outOfBootstrap || rebateStats.tombPrice >= 1.01) ? apr.toFixed(2) : \"0.00\")}%\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Yearly Rewards</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                              <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                                {numberWithCommas((!rebateStats.outOfBootstrap || rebateStats.tombPrice >= 1.01) ? dpr.toFixed(2) : \"0.00\")}%\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Daily Rewards</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                              <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                                ${numberWithCommas(stakedPriceInDollars.toFixed(2))}\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Staked Value</Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                              <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                                ${numberWithCommas(earnedInDollars.toFixed(2))}\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Total Earned</Typography>\r\n                            </Grid>\r\n\r\n                          </Grid>\r\n                        </div>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Typography align=\"center\" variant=\"h2\" className=\"textGlow pink\" style={{marginTop: '100px', marginBottom: '50px'}}>\r\n                HODL (Bonds)\r\n              </Typography>\r\n\r\n              <Grid container justifyContent=\"center\" spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Card className=\"boxed link\">\r\n                    <CardContent align=\"center\">\r\n                      <Link to=\"/bonds\" style={{textDecoration: 'none',color: 'inherit'}}>\r\n                      <Box style={{marginBottom: '20px'}}>\r\n                        <CardIcon>\r\n                          <TokenSymbol symbol=\"HODL\" />\r\n                        </CardIcon>\r\n                      </Box>\r\n                      <Typography variant=\"h4\" className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                        Buy or Redeem Bonds\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" style={{marginBottom: '20px'}}>     \r\n                        Swap GAME for HODL when GAME is below $1.00 and earn premiums upon redemption\r\n                      </Typography>\r\n                      <div className='info-wrap'>\r\n                      <Grid container spacing={3}>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            {getDisplayBalance(cashPrice, 18, 4)} DAI\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">GAME Price (TWAP)</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                            {getDisplayBalance(bondBalance)}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Deposits</Typography>\r\n                        </Grid>\r\n\r\n                      </Grid>\r\n                      </div>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n\r\n\r\n            </Paper>\r\n          ) : (\r\n            <UnlockWallet />\r\n          )}\r\n        </Route>\r\n        <Route path={`${path}/:bankId`}>\r\n          <Bank />\r\n        </Route>\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Cemetery;\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText className=\"textGlow\">\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <Button style={styleButton} size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n              Max\r\n            </Button>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div``;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst styleButton = {\r\n  height: '56px',\r\n  borderTopLeftRadius: '0',\r\n  borderBottomLeftRadius: '0'\r\n};\r\n\r\nexport default TokenInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'QuestionMark');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({ value }) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, tombFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n"],"sourceRoot":""}