{"version":3,"sources":["state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/UnlockWallet/UnlockWallet.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","hooks/useBondStats.ts","components/PageHeader/PageHeader.tsx","views/Pit/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Pit/components/ExchangeCard.tsx","hooks/useCashPriceInLastTWAP.ts","views/Pit/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","tomb-finance/constants.ts","views/Pit/Pit.tsx","hooks/useRefresh.ts"],"names":["useTransactionAdder","useWallet","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","fastRefresh","useRefresh","useMemo","Object","keys","some","tx","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","styled","div","props","theme","borderRadius","spacing","StyledInput","input","color","grey","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","StyledModalActions","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useAllowance","token","pendingApproval","useState","allowance","setAllowance","fetchAllowance","a","useEffect","catch","err","console","error","stack","UnlockWallet","Box","style","position","top","left","transform","AccountButton","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","useApprove","address","currentAllowance","approvalState","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","approve","Spacer","s","useContext","ThemeContext","useBondStats","stat","setStat","slowRefresh","tombFinance","useTombFinance","getBondStat","fetchBondPrice","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","PageHeader","icon","subtitle","title","ExchangeModal","description","onConfirm","onDismiss","action","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","text","Label","DEFAULT_ERROR_MSG","useCatchError","addPopup","useAddPopup","promise","message","includes","StyledCardTitle","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabled","disabledDescription","catchError","Treasury","contracts","approveStatus","balance","useTokenBalance","useModal","onPresent","Card","CardContent","background","TokenSymbol","faArrowRight","useCashPriceInLastTWAP","price","setPrice","fetchCashPrice","getTombPriceInLastTWAP","refreshInterval","setInterval","config","clearInterval","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","BackgroundImage","createGlobalStyle","StyledBond","StyledCardWrapper","StyledStatsWrapper","Pit","path","useRouteMatch","bondStat","cashPrice","bondsPurchasable","bondBalance","TBOND","handleBuyBonds","amount","buyBonds","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","Page","Typography","align","gutterBottom","exact","TOMB","getDisplayBalance","eq","RefreshContext","fast","slow"],"mappings":"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","file":"static/js/14.1fe57cf5.chunk.js","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useWallet } from 'use-wallet';\r\n\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { addTransaction, clearAllTransactions } from './actions';\r\nimport { TransactionDetails } from './reducer';\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return;\r\n      if (!chainId) return;\r\n\r\n      const { hash } = response;\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.');\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\r\n    },\r\n    [dispatch, chainId, account],\r\n  );\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useWallet();\r\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n  return chainId ? state[chainId] ?? {} : {};\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions();\r\n  if (!transactionHash || !transactions[transactionHash]) {\r\n    return false;\r\n  }\r\n  return !transactions[transactionHash].receipt;\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000;\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions();\r\n  const { fastRefresh } = useRefresh();\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash];\r\n        if (!tx) return false;\r\n        if (tx.receipt) {\r\n          return false;\r\n        } else {\r\n          const approval = tx.approval;\r\n          if (!approval) return false;\r\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }\r\n      }),\r\n    [allTransactions, spender, tokenAddress, fastRefresh],\r\n  );\r\n}\r\n\r\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\r\n  const { chainId } = useWallet();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return {\r\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [dispatch, chainId]),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: white;\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                Max\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const { account } = useWallet();\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance, fastRefresh]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, fastRefresh, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { TokenStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useBondStats = () => {\r\n  const [stat, setStat] = useState<TokenStat>();\r\n  const { slowRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondPrice() {\r\n      try {\r\n        setStat(await tombFinance.getBondStat());\r\n      }\r\n      catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchBondPrice();\r\n  }, [setStat, tombFinance, slowRefresh]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useBondStats;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 610px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[100]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport Button from '../../../components/Button';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={title} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button text={action} onClick={() => onConfirm(val)} />\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import { useCallback } from 'react';\r\nimport { useAddPopup } from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({ error: { message, stack: err.stack } });\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button, Card } from '@mui/material';\r\n\r\n// import Button from '../../../components/Button';\r\n// import Card from '../../../components/Card';\r\nimport CardContent from '../../../components/CardContent';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport Label from '../../../components/Label';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome/index';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/index';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../tomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n}\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: { Treasury },\r\n  } = useTombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={balance}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\r\n          <StyledExchanger>\r\n            <StyledToken>\r\n              <StyledCardIcon style={{ background: 'transparent' }}>\r\n                <TokenSymbol symbol={fromToken.symbol} size={54}/>\r\n              </StyledCardIcon>\r\n              <Label text={fromTokenName} variant=\"normal\" />\r\n            </StyledToken>\r\n            <StyledExchangeArrow>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </StyledExchangeArrow>\r\n            <StyledToken>\r\n              <StyledCardIcon style={{ background: 'transparent' }}>\r\n                <TokenSymbol symbol={toToken.symbol} size={54} />\r\n              </StyledCardIcon>\r\n              <Label text={toTokenName} variant=\"normal\" />\r\n            </StyledToken>\r\n          </StyledExchanger>\r\n          <StyledDesc>{priceDesc}</StyledDesc>\r\n          <StyledCardActions>\r\n            {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  height: 64px;\r\n  justify-content: center;\r\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: ${(props) => props.theme.color.grey[900]};\r\n  width: 72px;\r\n  height: 72px;\r\n  border-radius: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledExchanger = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\r\n`;\r\n\r\nconst StyledExchangeArrow = styled.div`\r\n  font-size: 20px;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledToken = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledDesc = styled.span``;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default ExchangeCard;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Card } from '@mui/material';\r\n\r\ninterface ExchangeStatProps {\r\n  tokenName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\n\r\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({ tokenName, description, price }) => {\r\n  return (\r\n    <Card>\r\n      <StyledCardContentInner>\r\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} DAI`}</StyledCardTitle>\r\n        <StyledDesc>{description}</StyledDesc>\r\n      </StyledCardContentInner>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst StyledCardTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nconst StyledDesc = styled.span`\r\n  //color: ${(props) => props.theme.color.grey[300]};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing[2]}px;\r\n`;\r\n\r\nexport default ExchangeStat;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n        try {\r\n            setBalance(await tombFinance.getBondsPurchasable());\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n        }\r\n      }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, tombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import { BigNumber } from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport PitImage from '../../assets/img/pit.png';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport ExchangeStat from './components/ExchangeStat';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\r\nimport { Typography } from '@mui/material';\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\n\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background-color: var(--black);\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\r\n}\r\n\r\n* {\r\n    background: transparent;\r\n    border-radius: 0 !important;\r\n    box-shadow: none !important;\r\n}\r\n`;\r\n\r\nconst Pit: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const tombFinance = useTombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const bondsPurchasable = useBondsPurchasable();\r\n  const  { slowRefresh } = useRefresh();\r\n\r\n  const bondBalance = useTokenBalance(tombFinance?.TBOND);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\r\n      });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance.redeemBonds(amount);\r\n      addTransaction(tx, { summary: `Redeem ${amount} TBOND` });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice, slowRefresh]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat, slowRefresh]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n        {!!account ? (\r\n          <>\r\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\r\n              Bonds\r\n            </Typography>\r\n            <Route exact path={path}>\r\n              <PageHeader icon={'🏦'} subtitle=\"Earn premiums upon redemption\" />\r\n            </Route>\r\n            <StyledBond>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={tombFinance.TOMB}\r\n                  fromTokenName=\"GAME\"\r\n                  toToken={tombFinance.TBOND}\r\n                  toTokenName=\"HODL\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'GAME is over peg'\r\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' HODL available for purchase'\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n              </StyledCardWrapper>\r\n              <StyledStatsWrapper>\r\n                <ExchangeStat\r\n                  tokenName=\"GAME\"\r\n                  description=\"Last-Hour TWAP Price\"\r\n                  price={getDisplayBalance(cashPrice, 18, 4)}\r\n                />\r\n                <Spacer size=\"md\" />\r\n                <ExchangeStat\r\n                  tokenName=\"HODL\"\r\n                  description=\"Current Price: (GAME)^2\"\r\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\r\n                />\r\n              </StyledStatsWrapper>\r\n              <StyledCardWrapper>\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={tombFinance.TBOND}\r\n                  fromTokenName=\"HODL\"\r\n                  toToken={tombFinance.TOMB}\r\n                  toTokenName=\"GAME\"\r\n                  priceDesc={`${getDisplayBalance(bondBalance)} HODL Available in wallet`}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when GAME > ${BOND_REDEEM_PRICE} FTM` : null}\r\n                />\r\n              </StyledCardWrapper>\r\n            </StyledBond>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst StyledBond = styled.div`\r\n  display: flex;\r\n  background: transparent;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background: transparent;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledStatsWrapper = styled.div`\r\n  display: flex;\r\n  flex: 0.8;\r\n  margin: 0 20px;\r\n  background: transparent;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nexport default Pit;\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from './../contexts/RefreshContext'\r\n\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh"],"sourceRoot":""}