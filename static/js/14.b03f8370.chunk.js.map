{"version":3,"sources":["hooks/useTokenNoUnlockBeforeTransfer.ts","hooks/useTokenSetNoUnlockBeforeTransfer.ts","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","hooks/useTotalTreasuryBalance.js","hooks/useEarnings.ts","hooks/useStakedBalance.ts","hooks/useStatsForPool.ts","hooks/useBanks.ts","components/PageHeader/PageHeader.tsx","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","views/Treasury/Cemetery.js","components/ModalActions/ModalActions.tsx","components/TokenInput/TokenInput.tsx","components/Value/Value.tsx","components/UnlockWallet/UnlockWallet.tsx","components/Input/Input.tsx","hooks/useAllowance.ts","hooks/useApprove.ts","hooks/useStakedTokenPriceInDollars.ts"],"names":["useTokenNoUnlockBeforeTranfer","token","useState","noUnlock","setNoUnlock","tombFinance","useTombFinance","isUnlocked","fetchBalance","useCallback","a","noUnlockBeforeTransfer","myAccount","useEffect","catch","err","console","error","stack","refreshInterval","setInterval","config","clearInterval","useSetTokenNoUnlockBeforeTransfer","handleTransactionReceipt","useHandleTransactionReceipt","onSetTokenNoUnlockBeforeTransfer","setNoUnlockBeforeTransfer","useLpStats","lpTicker","stat","setStat","slowRefresh","useRefresh","getLPStat","fetchLpPrice","useZap","bank","onZap","zappingToken","tokenName","amount","zapIn","depositTokenName","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","DAI_TICKER","FTM","TOMB_TICKER","TOMB","TSHARE_TICKER","TSHARE","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","spender","ZapModal","onConfirm","onDismiss","decimals","balance","useTokenBalance","ftmBalance","getDisplayBalance","tombBalance","tshareBalance","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","tombFtmLpStats","tShareFtmLpStats","tombLPStats","tshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","toString","handleSelectMax","Modal","text","InputLabel","id","style","textAlign","className","Select","onChange","event","target","labelId","marginBottom","MenuItem","TokenInput","onSelectMax","max","Typography","variant","marginTop","color","align","Number","toFixed","ModalActions","Button","onClick","component","web3","Web3","ERC20ABI","treasuryAddress","useTotalTreasuryBalance","Theory","eth","Contract","DAI","setBalance","balance_2shares_dai","setBalance_2shares_dai","balance_game_dai","setBalance_game_dai","balancetheory_dai","setBalancetheory_dai","balance_game","setBalance_game","balancetheory","setBalancetheory","balance_2shares","setBalance_2shares","getBalance","interval","axios","data","utils","methods","balanceOf","call","theoryBalance","fromWei","valueTheory","data2sharesAndGame","log","usd_value","getLPPrice","LP_2shares_dai","LP_game_dai","LPtheory_dai","getGameBalance","getTheoryBalance","get2sharesBalance","tokenGame","price","usdValue","tokenTheory","token2shares","LPAddress","LPtoken","daiValue","getTokenPrice","tokenValue","totalSupply","OneTokenValue","total","useEarnings","poolName","earnTokenName","poolId","earnedFromBank","refreshBalance","useStakedBalance","stakedBalanceOnBank","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","useBanks","useContext","BanksContext","banks","StyledPageHeader","styled","div","props","theme","spacing","StyledTitle","h1","grey","StyledSubtitle","h3","PageHeader","icon","subtitle","title","useHarvest","onReward","harvest","contract","Harvest","rewardsLocked","classname","earnings","useTokenNoUnlockBeforeTransfer","tombStats","useTombStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","numberWithCommas","x","replace","Card","CardContent","Box","CardIcon","TokenSymbol","earnToken","Value","disabled","eq","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useWithdraw","onWithdraw","unstake","DepositModal","fullBalance","getFullDisplayBalance","WithdrawModal","withdrawPercentage","useStyles","makeStyles","button","width","height","fontSize","padding","minWidth","Stake","classes","useApprove","approveStatus","tokenBalance","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","handleModalClose","onCloseModal","fontWeight","fullWidth","onHandleModal","closedForStaking","marginLeft","marginRight","useBank","contractName","find","page","useRedeem","onRedeem","exit","section","boxed","overflow","position","content","background","left","bottom","transform","boxShadow","boxClear","border","backdropFilter","paddingBottom","advanced","paddingTop","display","boxed2","borderRadius","flexDirection","textShadow","BankNotFound","Center","StyledLink","primary","main","Bank","window","scrollTo","bankId","useParams","account","useWallet","statsOnPool","React","AdvancedOpen","setAdvancedOpen","onCloseRewards","onHandleRewards","onCloseStats","onHandleStats","Grid","container","justifyContent","item","xs","md","yearlyAPR","locked","dailyAPR","cursor","verticalAlign","TableContainer","Paper","Table","TableBody","TableRow","TableCell","TVL","includes","href","fee","UnlockWallet","BackgroundImage","createGlobalStyle","gridItem","breakpoints","up","Cemetery","path","useRouteMatch","filter","finished","Page","exact","Container","maxWidth","gutterBottom","mt","lg","end","separator","prefix","StyledModalActions","StyledModalAction","StyledSpacer","children","l","Children","toArray","length","map","child","i","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","styleButton","borderTopLeftRadius","borderBottomLeftRadius","toLocaleString","Input","endAdornment","size","placeholder","StyledValue","top","AccountButton","StyledInputWrapper","StyledInput","input","startAdornment","allowance","setAllowance","fastRefresh","fetchAllowance","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars"],"mappings":"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","file":"static/js/14.b03f8370.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useTokenNoUnlockBeforeTranfer = (token: ERC20Lockable) => {\r\n  const [noUnlock, setNoUnlock] = useState(false);\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setNoUnlock(await token.noUnlockBeforeTransfer(tombFinance?.myAccount));\r\n  }, [token, tombFinance?.myAccount]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(`Failed to fetch token lock: ${err.stack}`));\r\n      let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [isUnlocked, token, fetchBalance, tombFinance]);\r\n\r\n  return noUnlock;\r\n};\r\n\r\nexport default useTokenNoUnlockBeforeTranfer;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport useHandleTransactionReceipt from \"./useHandleTransactionReceipt\";\r\n\r\nconst useSetTokenNoUnlockBeforeTransfer = (token: ERC20Lockable) => {\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleSetTokenNoUnlockBeforeTransfer = useCallback(\r\n      () => {\r\n        handleTransactionReceipt(\r\n            token.setNoUnlockBeforeTransfer(true),\r\n            `Approve Unlock On Claim`,\r\n        );\r\n      },\r\n      [token, handleTransactionReceipt],\r\n  );\r\n  return { onSetTokenNoUnlockBeforeTransfer: handleSetTokenNoUnlockBeforeTransfer };\r\n};\r\n\r\nexport default useSetTokenNoUnlockBeforeTransfer;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { LPStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useLpStats = (lpTicker: string) => {\r\n  const [stat, setStat] = useState<LPStat>();\r\n  const { slowRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchLpPrice() {\r\n      try{\r\n        setStat(await tombFinance?.getLPStat(lpTicker));\r\n      }\r\n      catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchLpPrice();\r\n  }, [setStat, tombFinance, slowRefresh, lpTicker]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useLpStats;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useZap = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleZap = useCallback(\r\n    (zappingToken: string, tokenName: string, amount: string) => {\r\n      handleTransactionReceipt(\r\n        tombFinance?.zapIn(zappingToken, tokenName, amount),\r\n        `Zap ${amount} in ${bank.depositTokenName}.`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onZap: handleZap };\r\n};\r\n\r\nexport default useZap;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport { DAI_TICKER, TOMB_TICKER, TSHARE_TICKER, ZAPPER_ROUTER_ADDR } from '../utils/constants';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  let token: ERC20;\r\n  if (zappingToken === DAI_TICKER) token = tombFinance?.FTM;\r\n  else if (zappingToken === TOMB_TICKER) token = tombFinance?.TOMB;\r\n  else if (zappingToken === TSHARE_TICKER) token = tombFinance?.TSHARE;\r\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\r\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, tombFinance, slowRefresh]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: ZAPPER_ROUTER_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction, slowRefresh]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveZapper;\r\n","import React, { useState, useMemo } from 'react';\r\n\r\nimport { Button, Select, MenuItem, InputLabel, Typography } from '@mui/material';\r\nimport { withStyles } from '@mui/styles'\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport styled from 'styled-components';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport Label from '../../../components/Label';\r\nimport useLpStats from '../../../hooks/useLpStats';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport { useWallet } from 'use-wallet';\r\nimport useApproveZapper, { ApprovalState } from '../../../hooks/useApproveZapper';\r\nimport { TOMB_TICKER, TSHARE_TICKER, DAI_TICKER } from '../../../utils/constants';\r\nimport { Alert } from '@mui/lab';\r\nimport useRefresh from \"../../../hooks/useRefresh\";\r\n\r\ninterface ZapProps extends ModalProps {\r\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\n// create function for string convert to 4 decimal places\r\nconst convertTo4Decimals = (amount: Number) => {\r\n  return amount.toFixed(4);\r\n}\r\n\r\nconst ZapModal: React.FC<ZapProps> = ({ onConfirm, onDismiss, tokenName = '', decimals = 18 }) => {\r\n  const tombFinance = useTombFinance();\r\n  const balance = useTokenBalance(tombFinance?.FTM);\r\n  const ftmBalance = getDisplayBalance(balance);\r\n  const tombBalance = useTokenBalance(tombFinance?.TOMB);\r\n  const tshareBalance = useTokenBalance(tombFinance?.TSHARE);\r\n  const [val, setVal] = useState('');\r\n  const [zappingToken, setZappingToken] = useState(DAI_TICKER);\r\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\r\n  const [estimate, setEstimate] = useState({ token0: '0', token1: '0' }); // token0 will always be FTM in this case\r\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\r\n  const tombFtmLpStats = useLpStats('GAME-DAI-LP');\r\n  const tShareFtmLpStats = useLpStats('THEORY-DAI-LP');\r\n  const tombLPStats = useMemo(() => (tombFtmLpStats ? tombFtmLpStats : null), [tombFtmLpStats]);\r\n  const tshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\r\n  const ftmAmountPerLP = tokenName.startsWith(TOMB_TICKER) ? tombLPStats?.ftmAmount : tshareLPStats?.ftmAmount;\r\n  if(zappingToken === DAI_TICKER && zappingTokenBalance !== ftmBalance) setZappingTokenBalance(ftmBalance);\r\n  /**\r\n   * Checks if a value is a valid number or not\r\n   * @param n is the value to be evaluated for a number\r\n   * @returns\r\n   */\r\n  function isNumeric(n: any) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  const handleChangeAsset = (event: any) => {\r\n    const value = event.target.value;\r\n    setZappingToken(value);\r\n    setZappingTokenBalance(ftmBalance);\r\n    if (event.target.value === TSHARE_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tshareBalance, decimals));\r\n    }\r\n    if (event.target.value === TOMB_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tombBalance, decimals));\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setVal(e.currentTarget.value);\r\n      setEstimate({ token0: '0', token1: '0' });\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setVal(e.currentTarget.value);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  const handleSelectMax = async () => {\r\n    setVal(zappingTokenBalance);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  return (\r\n    <Modal text={`Create ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n\r\n      <InputLabel id=\"label\" style={{textAlign: 'center'}} className=\"textGlow\">\r\n        Select asset to use\r\n      </InputLabel>\r\n      <Select\r\n        onChange={handleChangeAsset}\r\n        labelId=\"label\"\r\n        id=\"select\"\r\n        value={zappingToken}\r\n        style={{marginBottom: '20px'}}\r\n      >\r\n        <MenuItem value={TOMB_TICKER}>GAME</MenuItem>\r\n        <MenuItem value={DAI_TICKER}>DAI</MenuItem>\r\n        <MenuItem value={TSHARE_TICKER}>THEORY</MenuItem>\r\n      </Select>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={zappingTokenBalance}\r\n        symbol={zappingToken}\r\n      />\r\n      <Typography variant=\"h5\" style={{textAlign: 'center', marginTop: '20px', marginBottom: '10px'}}>\r\n        Estimated {tokenName} tokens\r\n      </Typography>\r\n      <Typography variant=\"h3\" color=\"var(--extra-color-2)\" align='center'>\r\n        {' '}\r\n        {convertTo4Decimals(Number(estimate.token0) / Number(ftmAmountPerLP))}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className=\"textGlow\" align=\"center\">\r\n        {' '}\r\n        ({Number(estimate.token0).toFixed(4)} {DAI_TICKER} / {Number(estimate.token1).toFixed(4)}{' '}\r\n        {tokenName.startsWith(TOMB_TICKER) ? TOMB_TICKER : TSHARE_TICKER}){' '}\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\r\n          }\r\n        >\r\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant='h4' component=\"p\" style={{textAlign: 'center', marginTop: '40px', marginBottom: '20px'}}>\r\n        After creating tokens,<br />deposit them in the liquidity pool.\r\n      </Typography>\r\n      <Typography variant='body1' className=\"textGlow\" style={{textAlign: 'center'}}>\r\n        Zapping incurs a 0.5% convenience fee and 0.5% slippage.<br />Beta feature. Use at your own risk!\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ZapModal;\r\n","import { useEffect, useState } from \"react\"\r\nimport Web3 from \"web3\"\r\nimport { web3ProviderFrom } from \"../tomb-finance/ether-utils\"\r\nimport { getBalance } from \"../utils/formatBalance\"\r\nimport axios from 'axios'\r\n\r\nconst web3 = new Web3(\"https://rpcapi.fantom.network/\")\r\n\r\nconst ERC20ABI = [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint8\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"name\": \"balance\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" } ]\r\nconst treasuryAddress = \"0x8f555E00ea0FAc871b3Aa70C015915dB094E7f88\"\r\n\r\n// const assetList = [\r\n//     \"0xc54A1684fD1bef1f077a336E6be4Bd9a3096a6Ca\", // 2shares\r\n//     \"0x6398ACBBAB2561553a9e458Ab67dCFbD58944e52\", // 2shares/FTM LP\r\n//     \"0x83A52eff2E9D112E9B022399A9fD22a9DB7d33Ae\", // Game/dai\r\n//     \"0x6437ADAC543583C4b31Bf0323A0870430F5CC2e7\", // Theory\r\n//     \"0xd352daC95a91AfeFb112DBBB3463ccfA5EC15b65\", // Theory/dai\r\n// ]\r\n\r\n// const contracts = assetList.map(asset => new web3.eth.Contract(ERC20ABI, asset))\r\n\r\n// function useTotalTreasuryBalance() {\r\n//     const [ prices, setPrices ] = useState(assetList.map(asset => {\r\n//         return { token: asset, value: 0 }\r\n//     }))\r\n//     useEffect(() => {\r\n//         getPrices()\r\n//     }, [])\r\n\r\n//     async function getPrices() {\r\n//         for (const token of contracts) {\r\n//             console.log(token)\r\n//         }\r\n//     }\r\n\r\n//     return prices\r\n// }\r\n\r\nfunction useTotalTreasuryBalance() {\r\n    const Theory = new web3.eth.Contract(ERC20ABI, '0x6437ADAC543583C4b31Bf0323A0870430F5CC2e7')\r\n    const DAI = new web3.eth.Contract(ERC20ABI, '0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83')\r\n    const [balance, setBalance] = useState(0)\r\n    const [balance_2shares_dai, setBalance_2shares_dai] = useState(0)\r\n    const [balance_game_dai, setBalance_game_dai] = useState(0)\r\n    const [balancetheory_dai, setBalancetheory_dai] = useState(0)\r\n    const [balance_game, setBalance_game] = useState(0)\r\n    const [balancetheory, setBalancetheory] = useState(0)\r\n    const [balance_2shares, setBalance_2shares] = useState(0)\r\n\r\n    useEffect(() => {\r\n        getBalance()\r\n        const interval = setInterval(() => {\r\n            getBalance()\r\n        }, 30000)\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, [])\r\n\r\n    return { balance, balance_2shares_dai, balance_game_dai, balancetheory_dai, balance_game, balancetheory, balance_2shares }\r\n\r\n    async function getBalance() {\r\n        // const { data2omb } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=2omb-fi')\r\n        // const { data2shares } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=2share')\r\n        // const { dataGame } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=30mb-token')\r\n        \r\n        const { data } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=Theory')\r\n        const theoryBalance = web3.utils.fromWei(await Theory.methods.balanceOf(treasuryAddress).call())\r\n        const valueTheory = theoryBalance * 0//data[0].current_price\r\n\r\n        const data2sharesAndGame = await axios('https://openapi.debank.com/v1/user/chain_balance?id=0x8f555E00ea0FAc871b3Aa70C015915dB094E7f88&chain_id=ftm')\r\n\r\n        console.log(`3Shares USD: $${valueTheory}`)\r\n        console.log(`2Shares + Game: $${data2sharesAndGame.data.usd_value}`)\r\n        const LP_2shares_dai = await getLPPrice('0x6398ACBBAB2561553a9e458Ab67dCFbD58944e52', '0xc54a1684fd1bef1f077a336e6be4bd9a3096a6ca')\r\n        const LP_game_dai = await getLPPrice('0x83A52eff2E9D112E9B022399A9fD22a9DB7d33Ae', '0x14def7584a6c52f470ca4f4b9671056b22f4ffde')\r\n        const LPtheory_dai = await getLPPrice('0xd352daC95a91AfeFb112DBBB3463ccfA5EC15b65', '0x6437adac543583c4b31bf0323a0870430f5cc2e7')\r\n        setBalance(data2sharesAndGame.data.usd_value + valueTheory + LP_2shares_dai + LP_game_dai + LPtheory_dai)\r\n        setBalance_2shares_dai(LP_2shares_dai)\r\n        setBalance_game_dai(LP_game_dai)\r\n        setBalancetheory_dai(LPtheory_dai)\r\n        setBalance_game(await getGameBalance())\r\n        setBalancetheory(await getTheoryBalance())\r\n        setBalance_2shares(await get2sharesBalance())\r\n    }\r\n\r\n    async function getGameBalance() {\r\n        const tokenGame = new web3.eth.Contract(ERC20ABI, '0x14DEf7584A6c52f470Ca4F4b9671056b22f4FfDE')\r\n        const { data } = await axios(`https://fantom.api.0x.org/swap/v1/quote?buyToken=USDC&sellToken=0x14DEf7584A6c52f470Ca4F4b9671056b22f4FfDE&sellAmount=100000000000000000`)\r\n        const usdValue = Number(web3.utils.fromWei(await tokenGame.methods.balanceOf(treasuryAddress).call())) * Number(data.price)\r\n\r\n        return usdValue\r\n    }\r\n\r\n    async function getTheoryBalance() {\r\n        const tokenTheory = new web3.eth.Contract(ERC20ABI, '0x6437ADAC543583C4b31Bf0323A0870430F5CC2e7')\r\n        const { data } = await axios(`https://fantom.api.0x.org/swap/v1/quote?buyToken=USDC&sellToken=0x6437ADAC543583C4b31Bf0323A0870430F5CC2e7&sellAmount=100000000000000000`)\r\n        const usdValue = Number(web3.utils.fromWei(await tokenTheory.methods.balanceOf(treasuryAddress).call())) * Number(data.price)\r\n\r\n        return usdValue\r\n    }\r\n\r\n    async function get2sharesBalance() {\r\n        const token2shares = new web3.eth.Contract(ERC20ABI, '0xc54A1684fD1bef1f077a336E6be4Bd9a3096a6Ca')\r\n        const { data } = await axios(`https://fantom.api.0x.org/swap/v1/quote?buyToken=USDC&sellToken=0xc54A1684fD1bef1f077a336E6be4Bd9a3096a6Ca&sellAmount=100000000000000000`)\r\n        const usdValue = Number(web3.utils.fromWei(await token2shares.methods.balanceOf(treasuryAddress).call())) * Number(data.price)\r\n\r\n        return usdValue\r\n    }\r\n\r\n    async function getLPPrice(LPAddress, tokenAddress) {\r\n        const token = new web3.eth.Contract(ERC20ABI, tokenAddress)\r\n        const LPtoken = new web3.eth.Contract(ERC20ABI, LPAddress)\r\n        const { data } = await axios('https://api.binance.com/api/v1/ticker/price?symbol=FTMUSDT')\r\n        const daiValue = Number(web3.utils.fromWei(await DAI.methods.balanceOf(LPAddress).call())) * Number(data.price)\r\n\r\n        const tokenValue = Number(await getTokenPrice(tokenAddress)) * Number(web3.utils.fromWei(await token.methods.balanceOf(LPAddress).call()))\r\n\r\n        const OneTokenValue = (daiValue + tokenValue) / Number(web3.utils.fromWei(await LPtoken.methods.totalSupply().call()))\r\n\r\n        const total = OneTokenValue * Number(web3.utils.fromWei(await LPtoken.methods.balanceOf(treasuryAddress).call()))\r\n\r\n        console.log(daiValue)\r\n        console.log(tokenValue)\r\n        console.log(OneTokenValue)\r\n        console.log(total)\r\n\r\n        return total\r\n    }\r\n\r\n    async function getTokenPrice(tokenAddress) {\r\n        const { data } = await axios(`https://fantom.api.0x.org/swap/v1/quote?buyToken=USDC&sellToken=${tokenAddress}&sellAmount=100000000000000000`)\r\n        return data.price\r\n    }\r\n}\r\n\r\nexport default useTotalTreasuryBalance","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.earnedFromBank(poolName, earnTokenName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.stakedBalanceOnBank(poolName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport { PoolStats } from '../tomb-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await tombFinance?.getPoolAPRs(bank));\r\n  }, [tombFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APRs for pool: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, tombFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const { banks } = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 610px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[100]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { Bank } from '../tomb-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      tombFinance?.harvest(bank.contract, bank.poolId),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onReward: handleReward };\r\n};\r\n\r\nexport default useHarvest;\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { Button, Card, CardContent, Box, Typography } from '@mui/material';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\nimport useTombStats from '../../../hooks/useTombStats';\r\nimport useShareStats from '../../../hooks/usetShareStats';\r\nimport useTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenNoUnlockBeforeTransfer\";\r\nimport useSetTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenSetNoUnlockBeforeTransfer\";\r\nimport useTombFinance from \"../../../hooks/useTombFinance\";\r\n\r\ninterface HarvestProps {\r\n  bank: Bank;\r\n  rewardsLocked : number;\r\n  classname: string;\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({ bank, rewardsLocked, classname }) => {\r\n  const tombFinance = useTombFinance();\r\n  const noUnlock = useTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const { onSetTokenNoUnlockBeforeTransfer } = useSetTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const { onReward } = useHarvest(bank);\r\n  const tombStats = useTombStats();\r\n  const tShareStats = useShareStats();\r\n\r\n  const tokenName = bank.earnTokenName === 'THEORY' ? 'THEORY' : 'GAME';\r\n  const tokenStats = bank.earnTokenName === 'THEORY' ? tShareStats : tombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n\r\n  classname = classname || '';\r\n\r\n  const numberWithCommas = (x: string) => {\r\n    if(x === null) return x;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n        <Box style={{marginBottom: '20px'}}>\r\n          <CardIcon>\r\n            <TokenSymbol symbol={bank.earnToken.symbol} />\r\n          </CardIcon>\r\n        </Box>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={getDisplayBalance(earnings)} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${numberWithCommas(earnedInDollars || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n            Total Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={`${(Number(getDisplayBalance(earnings)) * (100.0-rewardsLocked) / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n          ${numberWithCommas((Number(earnedInDollars) * (100.0-rewardsLocked) / 100.0).toFixed(2) || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          {tokenName} Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n            <Value value={`${(Number(getDisplayBalance(earnings)) * rewardsLocked / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${numberWithCommas((Number(earnedInDollars) * rewardsLocked / 100.0).toFixed(2) || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          L{tokenName} Earned\r\n        </Typography>\r\n\r\n        <Box className=\"buttonWrap\">\r\n          <Button\r\n              onClick={onReward}\r\n              variant=\"contained\"\r\n              disabled={earnings.eq(0)}\r\n          >\r\n            Claim Rewards\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Harvest;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.stake(bank.contract, bank.poolId, amountBn),\r\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useWithdraw = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.unstake(bank.contract, bank.poolId, amountBn),\r\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract} `,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onWithdraw: handleWithdraw };\r\n};\r\n\r\nexport default useWithdraw;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  decimals: number;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, decimals, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal text={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Deposit\r\n        </Button>\r\n      </ModalActions>\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n        Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n  withdrawPercentage?: string;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', decimals = 18, withdrawPercentage }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals, false);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  withdrawPercentage = withdrawPercentage || '';\r\n\r\n  return (\r\n    <Modal text={`Withdraw ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Typography variant=\"h6\" component=\"p\" style={{marginTop: '20px'}} align=\"center\">\r\n        Current Withdrawal Fee: {withdrawPercentage}%              \r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Withdraw\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n        Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React, { useMemo, useContext } from 'react';\r\n\r\nimport { Box, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport QuestionMark from '@mui/icons-material/QuestionMark';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useStake from '../../../hooks/useStake';\r\nimport useZap from '../../../hooks/useZap';\r\nimport useStakedBalance from '../../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useWithdraw from '../../../hooks/useWithdraw';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport ZapModal from './ZapModal';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\n\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  }\r\n}));\r\n\r\ninterface StakeProps {\r\n  bank: Bank;\r\n  withdrawPercentage: string;\r\n  classname: string;\r\n}\r\n\r\nconst numberWithCommas = (x: string) => {\r\n  if(x === null) return x;\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ bank, withdrawPercentage, classname }) => {\r\n  classname = classname || '';\r\n  withdrawPercentage = withdrawPercentage || '';\r\n  const classes = useStyles();\r\n\r\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\r\n\r\n  const tokenBalance = useTokenBalance(bank.depositToken);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const earnedInDollars = (\r\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n  const { onStake } = useStake(bank);\r\n  const { onZap } = useZap(bank);\r\n  const { onWithdraw } = useWithdraw(bank);\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onStake(amount);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentZap, onDissmissZap] = useModal(\r\n    <ZapModal\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(zappingToken, tokenName, amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onZap(zappingToken, tokenName, amount);\r\n        onDissmissZap();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      withdrawPercentage={withdrawPercentage}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onWithdraw(amount);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const handleModalClose = () => {\r\n    onCloseModal();\r\n  };\r\n  \r\n  const [onHandleModal, onCloseModal] = useModal(\r\n    <Modal text=\"Withdrawal Fee\" onDismiss={handleModalClose}>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n        Your withdrawal fee for each pool changes the longer your tokens are staked, from your initial deposit or last withdrawal.\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n      <strong>The fees are as follows:</strong>\r\n        <ul style={{marginTop:'10px'}}>\r\n          <li>1 block (30 seconds) = 25%</li>\r\n          <li>less than 1 hour = 8%</li>\r\n          <li>less than 1 day = 4%</li>\r\n          <li>less than 3 days = 2%</li>\r\n          <li>less than 5 days = 1%</li>\r\n          <li>less than 2 weeks = 0.5%</li>\r\n          <li>less than 4 weeks = 0.25%</li>\r\n          <li>4 weeks and longer  = 0.01%</li>\r\n        </ul>\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\">\r\n        Depositing or Claiming tokens does not reset your withdrawal fee.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleModalClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n\r\n      <Box className=\"icon-pools\" style={{marginBottom: '20px'}}>\r\n        <CardIcon>\r\n          <TokenSymbol symbol={bank.depositToken.symbol} />\r\n        </CardIcon>{\r\n\r\n          bank.depositTokenName == \"HODL\" ? null : (<CardIcon>\r\n              <TokenSymbol symbol=\"DAI\"/>\r\n          </CardIcon>)\r\n      }\r\n      </Box>\r\n\r\n      <Typography variant=\"h4\">\r\n        <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\r\n      </Typography>\r\n      <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n        ${numberWithCommas(earnedInDollars || '0.00')}\r\n      </Typography>\r\n      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n        {bank.depositTokenName} Staked\r\n      </Typography>\r\n\r\n            {approveStatus !== ApprovalState.APPROVED ? (\r\n              <Button\r\n                disabled={\r\n                  bank.closedForStaking ||\r\n                  approveStatus === ApprovalState.PENDING ||\r\n                  approveStatus === ApprovalState.UNKNOWN\r\n                }\r\n                onClick={approve}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: '20px' }}\r\n              >\r\n                {`Approve ${bank.depositTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Box className=\"buttonWrap\">\r\n                  <Typography variant=\"body1\" component=\"p\" style={{marginBottom: '20px'}}>\r\n                    Current Withdrawal Fee: {withdrawPercentage}%\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleModal}>\r\n                      <QuestionMark fontSize=\"inherit\" />\r\n                    </Button>\r\n                  </Typography>\r\n\r\n                    { bank.depositTokenName == \"HODL\" ? null : (<Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking || bank.depositTokenName === 'GAME-DAI-LP'}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\r\n                  style={{width: '100%', marginBottom: '20px'}}\r\n                >\r\n\r\n                  <span>Create Liquidity Pool Tokens</span>\r\n                  {/*<FlashOnIcon style={{ color: '#fff', marginLeft: '10px' }} />*/}\r\n                </Button>)\r\n                      }\r\n                <Button variant=\"contained\" onClick={onPresentWithdraw} style={{width: \"calc(50% - 7.5px)\",marginRight: '15px'}}>\r\n                  Withdraw\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\r\n                  style={{width: \"calc(50% - 7.5px)\"}}\r\n                >\r\n                  Deposit\r\n                </Button>\r\n\r\n                </Box>\r\n              </>\r\n            )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\nimport { Bank, ContractName } from '../tomb-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const { banks } = useContext(BanksContext);\r\n  return banks.find((bank) => bank.page === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useRedeem = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleRedeem = useCallback(() => {\r\n    handleTransactionReceipt(tombFinance?.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onRedeem: handleRedeem };\r\n};\r\n\r\nexport default useRedeem;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport { Box, Button, Card, CardContent, Typography, Grid, Paper } from '@mui/material';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport { ExpandMore as ChevronDownIcon } from '@mui/icons-material';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useBank from '../../hooks/useBank';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport useRedeem from '../../hooks/useRedeem';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport useModal from '../../hooks/useModal';\r\nimport Modal, { ModalProps } from '../../components/Modal';\r\nimport ModalActions from '../../components/ModalActions';\r\nimport useTombFinance from \"../../hooks/useTombFinance\";\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  },\r\n  boxed : {\r\n    overflow: 'initial',\r\n    '& .info-wrap': {\r\n      position: 'relative',\r\n      '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: '2px',\r\n        height: 'calc(100% - 20px)',\r\n        background: 'var(--extra-color-1)',\r\n        left: '50%',\r\n        bottom: '0',\r\n        transform: 'translateX(-50%)',\r\n        boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n\r\n      }\r\n    }\r\n  },\r\n  boxClear: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    backdropFilter: 'none',\r\n    '& > *': {\r\n      padding: '0',\r\n      '&:last-child': {\r\n        paddingBottom: '0'\r\n      }\r\n    },\r\n  },\r\n  advanced: {\r\n    textAlign: 'center',\r\n    '& .advanced-toggle' : {\r\n      paddingTop: '20px',\r\n      paddingBottom: '20px',\r\n    },\r\n    '& .advanced-info' : {\r\n      display: 'none',\r\n      marginBottom: '20px'\r\n    },\r\n    '&.open' : {\r\n      '& .advanced-info' : {\r\n        display: 'block',\r\n      },\r\n      '& .advanced-toggle' : {\r\n        '& svg' : {\r\n          transform: 'rotate(180deg)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  boxed2 : {\r\n    position: 'relative',\r\n    border: '0',\r\n    boxShadow: \"none\",\r\n    overflow: 'initial',\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      left: '0',\r\n      width: 'calc(100% - 4px)',\r\n      height: 'calc(100% - 34px)',\r\n      border: '2px solid var(--extra-color-1)',\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      paddingTop: '0',\r\n      height: 'calc(100% - 30px)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      '&:last-child': {\r\n        paddingBottom: '30px'\r\n      },\r\n      '& .buttonWrap': {\r\n        marginTop: 'auto'\r\n      }\r\n    },\r\n    '& .blueGlow': {\r\n      color: 'var(--extra-color-1)',\r\n      textShadow: '0px 0px 20px var(--extra-color-1)'\r\n    }\r\n  },\r\n}));\r\n\r\nconst numberWithCommas = (x: { toString: () => string; }) => {\r\n  if(x === null) return x;\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n//TODO: Get deposit fee from contract?\r\nconst Bank: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const classes = useStyles();\r\n  const tombFinance = useTombFinance();\r\n  const { bankId } = useParams();\r\n  const bank = useBank(bankId);\r\n\r\n  const { account } = useWallet();\r\n  const { onRedeem } = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n\r\n  const [AdvancedOpen, setAdvancedOpen] = React.useState(false);\r\n\r\n  const handleAdvancedOpen = () => {\r\n    (AdvancedOpen === false) ? setAdvancedOpen(true) : setAdvancedOpen(false);\r\n  };\r\n\r\n  const handleRewardsClose = () => {\r\n    onCloseRewards();\r\n  };\r\n  \r\n  const [onHandleRewards, onCloseRewards] = useModal(\r\n    <Modal text=\"Rewards\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>THEORY</strong><br />Are THEORY tokens which are available to you straight away.<br /><br />\r\n      <strong>LTHEORY</strong><br />Locked THEORY Tokens are claimable however they are locked until March 24th, 2023. They then take 12 months to fully unlock.<br /><br />\r\n      <strong>Unlocking LTHEORY</strong><br />some LTHEORY tokens can be unlocked early by using an NFT.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleRewardsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  const handleStatsClose = () => {\r\n    onCloseStats();\r\n  };\r\n  \r\n  const [onHandleStats, onCloseStats] = useModal(\r\n    <Modal text=\"Advanced Stats\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>LTHEORY %</strong><br />The percentage of your rewards if you claim that will be in Locked THEORY Tokens. This percentage decreases by 2% every week until March 24th, 2023 when all THEORY tokens will have been distributed.<br /><br />\r\n\r\n      <strong>Total Value Locked</strong><br />The total USD value of tokens staked in the pool.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleStatsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return account && bank ? (\r\n    <>\r\n      <div className=\"section\">\r\n      <Typography align=\"center\" variant=\"h2\" component=\"h1\" className=\"textGlow pink\" style={{marginBottom: '20px'}}>\r\n        {bank?.depositTokenName.replace('LP', 'Liquidity')} Pool\r\n      </Typography>\r\n      <Typography align=\"center\" variant=\"h5\" component=\"p\" style={{marginBottom: '50px', fontWeight: '500'}}>\r\n        Deposit {bank?.depositTokenName} tokens & earn {bank?.earnTokenName}\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\" spacing={3} style={{marginBottom: '30px'}}>\r\n            <Grid item xs={12} md={6}>\r\n              <div>\r\n              <Card className={classes.boxed}>\r\n                <CardContent>\r\n                  <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                    Rewards\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleRewards}>\r\n                      <QuestionMarkIcon fontSize='inherit' />\r\n                    </Button>\r\n                  </Typography>\r\n                  <div className='info-wrap'>\r\n                  <Grid container justifyContent=\"center\" spacing={3}>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              </div>\r\n              <div className={`${classes.advanced} ${AdvancedOpen ? 'open' : ''}`}>\r\n                <div className='advanced-toggle' onClick={handleAdvancedOpen}>\r\n                  <Typography align=\"center\" style={{display: 'inline-block',cursor: 'pointer', fontWeight: '700'}} className=\"textGlow pink\">\r\n                    <span style={{verticalAlign: 'middle'}}>{AdvancedOpen ? \"Hide Advanced\" : \"Show Advanced\"}</span>\r\n                    <ChevronDownIcon style={{verticalAlign: 'middle'}} />\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"advanced-info\">\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '10px'}}>\r\n                        Advanced Stats\r\n                        <Button variant=\"contained\" className={classes.button} aria-label=\"Advanced stats info\" style={{ marginLeft: '10px' }} onClick={onHandleStats}>\r\n                          <QuestionMarkIcon fontSize='inherit' />\r\n                        </Button>\r\n                      </Typography>\r\n                      <Grid container justifyContent=\"center\">\r\n                        <TableContainer component={Paper} style={{width: 'initial'}}>\r\n                          <Table aria-label=\"advanced info table\">\r\n                            <TableBody>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    L{bank.earnTokenName} %\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    {statsOnPool?.locked}%\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    Total Value Locked\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    ${numberWithCommas(statsOnPool?.TVL || '0.00')}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              {bank?.depositTokenName.includes(\"LP\") ?\r\n                              (<TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    Add Liquidity on SpookySwap\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    <StyledLink href={'https://spooky.fi/#/add/' + (bank?.depositTokenName.includes('GAME') ? tombFinance?.TOMB.address : tombFinance?.TSHARE.address) + \"/0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\"} target=\"_blank\">\r\n                                      Here\r\n                                    </StyledLink>\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>) : null}\r\n\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid item xs={12} md={4}>\r\n          <Harvest bank={bank} rewardsLocked={Number(statsOnPool?.locked)} classname=\"boxed\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Stake bank={bank} withdrawPercentage={statsOnPool?.fee} classname=\"boxed\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      </div>\r\n    </>\r\n  ) : !bank ? (\r\n    <BankNotFound />\r\n  ) : (\r\n    <UnlockWallet />\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"Please return to the homepage and try again later.\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.color.primary.main};\r\n`;\r\n\r\nexport default Bank;\r\n","import React from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport CountUp from 'react-countup';\r\nimport Bank from '../Bank';\r\nimport { makeStyles } from '@mui/styles';\r\nimport useTotalTreasuryBalance from '../../hooks/useTotalTreasuryBalance.js'\r\n\r\nimport { Box, Card, CardContent, Typography, Grid, Container } from '@mui/material';\r\n\r\nimport { Alert } from '@mui/lab';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\nimport CemeteryCard from './CemeteryCard';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport useBanks from '../../hooks/useBanks';\r\n\r\nconst assetList = [\r\n  {\r\n    depositTokenName: '2SHARES',\r\n  },\r\n  {\r\n    depositTokenName: '2SHARES-DAI LP',\r\n  },\r\n  {\r\n    depositTokenName: 'GAME-DAI LP',\r\n  },\r\n  {\r\n    depositTokenName: 'THEORY',\r\n  },\r\n  {\r\n    depositTokenName: 'THEORY-DAI LP',\r\n  },\r\n]\r\n\r\n// const BackgroundImage = createGlobalStyle`\r\n//   body {\r\n//     background-color: #ffffff;\r\n//     background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.12'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\r\n//   }\r\n// `;\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background-color: var(--black);\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\r\n}\r\n\r\n* {\r\n    border-radius: 0 !important;\r\n}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Cemetery = () => {\r\n  const classes = useStyles();\r\n  const [banks] = useBanks();\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const activeBanks = banks.filter((bank) => !bank.finished);\r\n  const { balance, balance_2shares_dai, balance_game_dai, balancetheory_dai, balance_game, balancetheory, balance_2shares } = useTotalTreasuryBalance();\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <Route exact path={path}>\r\n          <BackgroundImage />\r\n          {!!account ? (\r\n            <Container maxWidth=\"lg\">\r\n              <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom style={{ marginBottom: '50px' }}>\r\n                Treasury\r\n              </Typography>\r\n\r\n              {/* <Box mt={5}>\r\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\r\n                  <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom style={{ marginTop: '20px' }}>\r\n                    Genesis Pools\r\n                  </Typography>\r\n                  <Grid container spacing={3}>\r\n                    {activeBanks\r\n                      .filter((bank) => bank.sectionInUI === 0)\r\n                      .map((bank) => (\r\n                        <React.Fragment key={bank.name}>\r\n                          <CemeteryCard bank={bank} />\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n              </Box> */}\r\n              \r\n              <Box mt={2}>\r\n                <Grid container justifyContent=\"center\" spacing={3}>\r\n                  <Grid item xs={12} md={4} lg={4} className={classes.gridItem}>\r\n                    <Card style={{ height: \"auto\" }}>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          Total Treasury Balance:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balance} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              <Box mt={2} style={{ marginTop: '100px' }}>\r\n              <Typography color=\"textPrimary\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginBottom: '50px' }}>\r\n                Protocol Owned Liquidity\r\n              </Typography>\r\n                <Grid container justifyContent=\"center\" spacing={3}>\r\n                  <Grid item xs={12} md={4} lg={4} className={classes.gridItem}>\r\n                    <Card style={{ height: \"auto\" }}>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          GAME-DAI LP:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balance_game_dai} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          THEORY-DAI LP:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balancetheory_dai} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          2SHARES-DAI LP:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balance_2shares_dai} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={4} lg={4} className={classes.gridItem}>\r\n                    <Card style={{ height: \"auto\" }}>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          GAME:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balance_game} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          THEORY:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balancetheory} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                      <CardContent align=\"center\">\r\n                        <Typography variant=\"h5\">\r\n                          2SHARES:\r\n                        </Typography>\r\n                        <CountUp style={{ fontSize: '25px' }} end={balance_2shares} separator=\",\" prefix=\"$\" />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              {/* <Grid container justifyContent=\"center\" spacing={3}>\r\n                {assetList.map((asset) => \r\n                <Card>\r\n                  <CemeteryCard bank={asset} />\r\n                </Card>\r\n                )}\r\n              </Grid> */}\r\n\r\n\r\n\r\n\r\n              \r\n\r\n            </Container>\r\n          ) : (\r\n            <UnlockWallet />\r\n          )}\r\n        </Route>\r\n        <Route path={`${path}/:bankId`}>\r\n          <BackgroundImage />\r\n          <Bank />\r\n        </Route>\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Cemetery;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  text-align: center;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText className=\"textGlow\">\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <Button style={styleButton} size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n              Max\r\n            </Button>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div``;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst styleButton = {\r\n  height: '56px',\r\n  borderTopLeftRadius: '0',\r\n  borderBottomLeftRadius: '0'\r\n};\r\n\r\nexport default TokenInput;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({ value }) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: #0A142A;\r\n  border-radius: 20px;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0 20px;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const { account } = useWallet();\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance, fastRefresh]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, fastRefresh, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, tombFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n"],"sourceRoot":""}