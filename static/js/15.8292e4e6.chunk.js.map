{"version":3,"sources":["hooks/useZap.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","hooks/useEarnings.ts","hooks/useStakedBalance.ts","hooks/useStatsForPool.ts","views/Bank/components/DepositModal.tsx","hooks/useStakedBalanceOnMasonry.ts","hooks/useBanks.ts","hooks/useFetchMasonryAPR.ts","hooks/useEarningsOnMasonry.ts","hooks/useCashPriceInLastTWAP.ts","hooks/useFetchDungeonAPR.ts","hooks/useEarningsOnDungeon.ts","hooks/useStakedBalanceInTheoryOnDungeon.ts","components/PageHeader/PageHeader.tsx","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useWithdraw.ts","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","views/Migration/MigrationCard.js","views/Migration/Migration.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","components/TokenInput/TokenInput.tsx","../node_modules/@mui/icons-material/QuestionMark.js","../node_modules/@mui/material/Table/TableContext.js","components/Value/Value.tsx","hooks/useStakedTokenPriceInDollars.ts","hooks/useLpStats.ts","hooks/useTokenNoUnlockBeforeTransfer.ts","hooks/useTokenSetNoUnlockBeforeTransfer.ts"],"names":["useZap","bank","tombFinance","useTombFinance","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","token","slowRefresh","useRefresh","DAI_TICKER","FTM","TOMB_TICKER","TOMB","TSHARE_TICKER","TSHARE","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","a","console","error","response","summary","symbol","approval","tokenAddress","spender","ZapModal","onConfirm","onDismiss","decimals","balance","useTokenBalance","ftmBalance","getDisplayBalance","tombBalance","tshareBalance","useState","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","tombFtmLpStats","useLpStats","tShareFtmLpStats","tombLPStats","tshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","toString","handleSelectMax","Modal","text","InputLabel","id","style","textAlign","className","Select","onChange","event","target","labelId","marginBottom","MenuItem","TokenInput","onSelectMax","max","Typography","variant","marginTop","color","align","Number","toFixed","ModalActions","Button","onClick","component","useEarnings","poolName","earnTokenName","poolId","setBalance","isUnlocked","fetchBalance","earnedFromBank","myAccount","useEffect","catch","err","stack","refreshBalance","setInterval","config","refreshInterval","clearInterval","useStakedBalance","stakedBalanceOnBank","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","DepositModal","description","fullBalance","getFullDisplayBalance","undefined","useStakedBalanceOnMasonry","getStakedSharesOnMasonry","useBanks","useContext","BanksContext","banks","useFetchMasonryAPR","apr","setApr","dpr","setDpr","getMasonryAPR","getMasonryDPR","fetchMasonryAPR","useEarningsOnMasonry","getEarningsOnMasonry","useCashPriceInLastTWAP","price","setPrice","fetchCashPrice","getTombPriceInLastTWAP","useFetchDungeonAPR","getDungeonAPR","getDungeonDPR","useEarningsOnDungeon","getEarningsOnDungeon","useStakedBalanceInTheoryOnDungeon","getStakedSharesInTheoryOnDungeon","StyledPageHeader","styled","div","props","theme","spacing","StyledTitle","h1","grey","StyledSubtitle","h3","PageHeader","icon","subtitle","title","useHarvest","onReward","harvest","contract","Harvest","rewardsLocked","classname","earnings","useTokenNoUnlockBeforeTransfer","useSetTokenNoUnlockBeforeTransfer","onSetTokenNoUnlockBeforeTransfer","tombStats","useTombStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","numberWithCommas","x","replace","Card","CardContent","Box","CardIcon","TokenSymbol","earnToken","Value","disabled","eq","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useWithdraw","onWithdraw","unstake","WithdrawModal","withdrawPercentage","useStyles","makeStyles","button","width","height","fontSize","padding","minWidth","Stake","classes","useApprove","approveStatus","tokenBalance","stakedBalance","stakedTokenPriceInDollars","useStakedTokenPriceInDollars","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","handleModalClose","onCloseModal","fontWeight","fullWidth","onHandleModal","closedForStaking","marginLeft","marginRight","useBank","contractName","find","page","useRedeem","onRedeem","exit","section","boxed","overflow","position","content","background","left","bottom","transform","boxShadow","boxClear","border","backdropFilter","paddingBottom","advanced","paddingTop","display","boxed2","borderRadius","flexDirection","textShadow","BankNotFound","Center","StyledLink","primary","main","Bank","window","scrollTo","bankId","useParams","account","useWallet","statsOnPool","React","AdvancedOpen","setAdvancedOpen","onCloseRewards","onHandleRewards","onCloseStats","onHandleStats","Grid","container","justifyContent","item","xs","md","yearlyAPR","locked","dailyAPR","cursor","verticalAlign","TableContainer","Paper","Table","TableBody","TableRow","TableCell","TVL","includes","href","fee","UnlockWallet","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","name","overridesResolver","styles","root","overflowX","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableUtilityClass","TableRoot","stickyHeader","borderCollapse","borderSpacing","typography","body2","palette","secondary","captionSide","defaultComponent","size","slots","table","TableContext","Provider","children","role","getTableBodyUtilityClass","TableBodyRoot","tablelvl2","Tablelvl2Context","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","outline","hover","backgroundColor","action","selected","alpha","selectedOpacity","hoverOpacity","getTableCellUtilityClass","tableCellClasses","TableCellRoot","capitalize","borderBottom","mode","lighten","divider","darken","lineHeight","pxToRem","fontWeightMedium","paddingCheckbox","top","zIndex","default","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","blueGlow","MigrationCard","ERC20","getDefaultProvider","migrationBalance","contracts","Migrator","balanceOf","useMigrationBalance","maxMigration","axios","post","res","data","useMaxMigration","maxMigrationReduced","sub","maxBalance","signed","setSigned","migrate","signer","connect","endsWith","migrationMultiplier","Migration","path","useRouteMatch","Page","exact","maxwidth","Date","UTC","map","Fragment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","styleButton","borderTopLeftRadius","borderBottomLeftRadius","toLocaleString","Input","endAdornment","placeholder","_interopRequireDefault","require","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","StyledValue","stakedTokenName","stakedToken","setStakedTokenPriceInDollars","getDepositTokenPriceInDollars","refreshStakedTokenPriceInDollars","lpTicker","stat","setStat","getLPStat","fetchLpPrice","useTokenNoUnlockBeforeTranfer","noUnlock","setNoUnlock","noUnlockBeforeTransfer","setNoUnlockBeforeTransfer"],"mappings":"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","file":"static/js/15.8292e4e6.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useZap = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleZap = useCallback(\r\n    (zappingToken: string, tokenName: string, amount: string) => {\r\n      handleTransactionReceipt(\r\n        tombFinance?.zapIn(zappingToken, tokenName, amount),\r\n        `Zap ${amount} in ${bank.depositTokenName}.`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onZap: handleZap };\r\n};\r\n\r\nexport default useZap;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport { DAI_TICKER, TOMB_TICKER, TSHARE_TICKER, ZAPPER_ROUTER_ADDR } from '../utils/constants';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  let token: ERC20;\r\n  if (zappingToken === DAI_TICKER) token = tombFinance?.FTM;\r\n  else if (zappingToken === TOMB_TICKER) token = tombFinance?.TOMB;\r\n  else if (zappingToken === TSHARE_TICKER) token = tombFinance?.TSHARE;\r\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\r\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval, token, tombFinance, slowRefresh]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: ZAPPER_ROUTER_ADDR,\r\n      },\r\n    });\r\n  }, [approvalState, token, addTransaction, slowRefresh]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApproveZapper;\r\n","import React, { useState, useMemo } from 'react';\r\n\r\nimport { Button, Select, MenuItem, InputLabel, Typography } from '@mui/material';\r\nimport { withStyles } from '@mui/styles'\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport styled from 'styled-components';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport Label from '../../../components/Label';\r\nimport useLpStats from '../../../hooks/useLpStats';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport { useWallet } from 'use-wallet';\r\nimport useApproveZapper, { ApprovalState } from '../../../hooks/useApproveZapper';\r\nimport { TOMB_TICKER, TSHARE_TICKER, DAI_TICKER } from '../../../utils/constants';\r\nimport { Alert } from '@mui/lab';\r\nimport useRefresh from \"../../../hooks/useRefresh\";\r\n\r\ninterface ZapProps extends ModalProps {\r\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n}\r\n\r\n// create function for string convert to 4 decimal places\r\nconst convertTo4Decimals = (amount: Number) => {\r\n  return amount.toFixed(4);\r\n}\r\n\r\nconst ZapModal: React.FC<ZapProps> = ({ onConfirm, onDismiss, tokenName = '', decimals = 18 }) => {\r\n  const tombFinance = useTombFinance();\r\n  const balance = useTokenBalance(tombFinance?.FTM);\r\n  const ftmBalance = getDisplayBalance(balance);\r\n  const tombBalance = useTokenBalance(tombFinance?.TOMB);\r\n  const tshareBalance = useTokenBalance(tombFinance?.TSHARE);\r\n  const [val, setVal] = useState('');\r\n  const [zappingToken, setZappingToken] = useState(DAI_TICKER);\r\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\r\n  const [estimate, setEstimate] = useState({ token0: '0', token1: '0' }); // token0 will always be FTM in this case\r\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\r\n  const tombFtmLpStats = useLpStats('GAME-DAI-LP');\r\n  const tShareFtmLpStats = useLpStats('THEORY-DAI-LP');\r\n  const tombLPStats = useMemo(() => (tombFtmLpStats ? tombFtmLpStats : null), [tombFtmLpStats]);\r\n  const tshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\r\n  const ftmAmountPerLP = tokenName.startsWith(TOMB_TICKER) ? tombLPStats?.ftmAmount : tshareLPStats?.ftmAmount;\r\n  if(zappingToken === DAI_TICKER && zappingTokenBalance !== ftmBalance) setZappingTokenBalance(ftmBalance);\r\n  /**\r\n   * Checks if a value is a valid number or not\r\n   * @param n is the value to be evaluated for a number\r\n   * @returns\r\n   */\r\n  function isNumeric(n: any) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  const handleChangeAsset = (event: any) => {\r\n    const value = event.target.value;\r\n    setZappingToken(value);\r\n    setZappingTokenBalance(ftmBalance);\r\n    if (event.target.value === TSHARE_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tshareBalance, decimals));\r\n    }\r\n    if (event.target.value === TOMB_TICKER) {\r\n      setZappingTokenBalance(getDisplayBalance(tombBalance, decimals));\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\r\n      setVal(e.currentTarget.value);\r\n      setEstimate({ token0: '0', token1: '0' });\r\n    }\r\n    if (!isNumeric(e.currentTarget.value)) return;\r\n    setVal(e.currentTarget.value);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  const handleSelectMax = async () => {\r\n    setVal(zappingTokenBalance);\r\n    const estimateZap = await tombFinance?.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\r\n    setEstimate({ token0: estimateZap[0].toString(), token1: estimateZap[1].toString() });\r\n  };\r\n\r\n  return (\r\n    <Modal text={`Create ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n\r\n      <InputLabel id=\"label\" style={{textAlign: 'center'}} className=\"textGlow\">\r\n        Select asset to use\r\n      </InputLabel>\r\n      <Select\r\n        onChange={handleChangeAsset}\r\n        labelId=\"label\"\r\n        id=\"select\"\r\n        value={zappingToken}\r\n        style={{marginBottom: '20px'}}\r\n      >\r\n        <MenuItem value={TOMB_TICKER}>GAME</MenuItem>\r\n        <MenuItem value={DAI_TICKER}>DAI</MenuItem>\r\n        <MenuItem value={TSHARE_TICKER}>THEORY</MenuItem>\r\n      </Select>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={zappingTokenBalance}\r\n        symbol={zappingToken}\r\n      />\r\n      <Typography variant=\"h5\" style={{textAlign: 'center', marginTop: '20px', marginBottom: '10px'}}>\r\n        Estimated {tokenName} tokens\r\n      </Typography>\r\n      <Typography variant=\"h3\" color=\"var(--extra-color-2)\" align='center'>\r\n        {' '}\r\n        {convertTo4Decimals(Number(estimate.token0) / Number(ftmAmountPerLP))}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className=\"textGlow\" align=\"center\">\r\n        {' '}\r\n        ({Number(estimate.token0).toFixed(4)} {DAI_TICKER} / {Number(estimate.token1).toFixed(4)}{' '}\r\n        {tokenName.startsWith(TOMB_TICKER) ? TOMB_TICKER : TSHARE_TICKER}){' '}\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\r\n          }\r\n        >\r\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant='h4' component=\"p\" style={{textAlign: 'center', marginTop: '40px', marginBottom: '20px'}}>\r\n        After creating tokens,<br />deposit them in the liquidity pool.\r\n      </Typography>\r\n      <Typography variant='body1' className=\"textGlow\" style={{textAlign: 'center'}}>\r\n        Zapping incurs a 0.5% convenience fee and 0.5% slippage.<br />Beta feature. Use at your own risk!\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ZapModal;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.earnedFromBank(poolName, earnTokenName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, earnTokenName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarnings;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport { ContractName } from '../tomb-finance';\r\nimport config from '../config';\r\n\r\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.stakedBalanceOnBank(poolName, poolId, tombFinance?.myAccount);\r\n    setBalance(balance);\r\n  }, [poolName, poolId, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshBalance);\r\n    }\r\n  }, [isUnlocked, poolName, setBalance, tombFinance, fetchBalance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalance;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport { PoolStats } from '../tomb-finance/types';\r\nimport config from '../config';\r\n\r\nconst useStatsForPool = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n\r\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\r\n\r\n  const fetchAPRsForPool = useCallback(async () => {\r\n    setPoolAPRs(await tombFinance?.getPoolAPRs(bank));\r\n  }, [tombFinance, bank]);\r\n\r\n  useEffect(() => {\r\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APRs for pool: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPoolAPRs, tombFinance, fetchAPRsForPool]);\r\n\r\n  return poolAPRs;\r\n};\r\n\r\nexport default useStatsForPool;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  decimals: number;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  description?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, decimals, onConfirm, onDismiss, tokenName = '', description }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal text={`Deposit ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Deposit\r\n        </Button>\r\n      </ModalActions>\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n          {description !== undefined && description !== null ? description : \"Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\"}\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useStakedBalanceOnMasonry = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance?.getStakedSharesOnMasonry());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [slowRefresh, isUnlocked, tombFinance]);\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalanceOnMasonry;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\n\r\nconst useBanks = () => {\r\n  const { banks } = useContext(BanksContext);\r\n  return [banks];\r\n};\r\n\r\nexport default useBanks;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useFetchMasonryAPR = () => {\r\n  const [apr, setApr] = useState<number>(0);\r\n  const [dpr, setDpr] = useState<number>(0);\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh(); \r\n\r\n  useEffect(() => {\r\n    async function fetchMasonryAPR() {\r\n      try {\r\n        setApr(await tombFinance?.getMasonryAPR());\r\n        setDpr(await tombFinance?.getMasonryDPR());\r\n      } catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n   fetchMasonryAPR();\r\n  }, [setApr, setDpr, tombFinance, slowRefresh]);\r\n\r\n  return {apr,dpr};\r\n};\r\n\r\nexport default useFetchMasonryAPR;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useEarningsOnMasonry = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance?.getEarningsOnMasonry());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarningsOnMasonry;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance?.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useFetchDungeonAPR = () => {\r\n  const [apr, setApr] = useState<number>(0);\r\n  const [dpr, setDpr] = useState<number>(0);\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh(); \r\n\r\n  useEffect(() => {\r\n    async function fetchMasonryAPR() {\r\n      try {\r\n        setApr(await tombFinance.getDungeonAPR());\r\n        setDpr(await tombFinance.getDungeonDPR());\r\n      } catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n   fetchMasonryAPR();\r\n  }, [setApr, setDpr, tombFinance, slowRefresh]);\r\n\r\n  return {apr,dpr};\r\n};\r\n\r\nexport default useFetchDungeonAPR;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useEarningsOnDungeon = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance.getEarningsOnDungeon());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useEarningsOnDungeon;\r\n","import { useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useStakedBalanceInTheoryOnDungeon = () => {\r\n  const { slowRefresh } = useRefresh();\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n  useEffect(() => {\r\n    async function fetchBalance() {\r\n      try {\r\n        setBalance(await tombFinance.getStakedSharesInTheoryOnDungeon());\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      fetchBalance();\r\n    }\r\n  }, [slowRefresh, isUnlocked, tombFinance]);\r\n  return balance;\r\n};\r\n\r\nexport default useStakedBalanceInTheoryOnDungeon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PageHeaderProps {\r\n  icon: React.ReactNode;\r\n  subtitle?: string;\r\n  title?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\r\n  return (\r\n    <StyledPageHeader>\r\n      {/* <StyledIcon>{icon}</StyledIcon> */}\r\n      <StyledTitle>{title}</StyledTitle>\r\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n    </StyledPageHeader>\r\n  );\r\n};\r\n\r\nconst StyledPageHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  max-width: 610px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.grey[100]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default PageHeader;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { Bank } from '../tomb-finance';\r\n\r\nconst useHarvest = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleReward = useCallback(() => {\r\n    handleTransactionReceipt(\r\n      tombFinance?.harvest(bank.contract, bank.poolId),\r\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\r\n    );\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onReward: handleReward };\r\n};\r\n\r\nexport default useHarvest;\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { Button, Card, CardContent, Box, Typography } from '@mui/material';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useEarnings from '../../../hooks/useEarnings';\r\nimport useHarvest from '../../../hooks/useHarvest';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\nimport useTombStats from '../../../hooks/useTombStats';\r\nimport useShareStats from '../../../hooks/usetShareStats';\r\nimport useTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenNoUnlockBeforeTransfer\";\r\nimport useSetTokenNoUnlockBeforeTransfer from \"../../../hooks/useTokenSetNoUnlockBeforeTransfer\";\r\nimport useTombFinance from \"../../../hooks/useTombFinance\";\r\n\r\ninterface HarvestProps {\r\n  bank: Bank;\r\n  rewardsLocked : number;\r\n  classname: string;\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({ bank, rewardsLocked, classname }) => {\r\n  const tombFinance = useTombFinance();\r\n  const noUnlock = useTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const { onSetTokenNoUnlockBeforeTransfer } = useSetTokenNoUnlockBeforeTransfer(tombFinance?.TSHARE);\r\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\r\n  const { onReward } = useHarvest(bank);\r\n  const tombStats = useTombStats();\r\n  const tShareStats = useShareStats();\r\n\r\n  const tokenName = bank.earnTokenName === 'THEORY' ? 'THEORY' : 'GAME';\r\n  const tokenStats = bank.earnTokenName === 'THEORY' ? tShareStats : tombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n\r\n  classname = classname || '';\r\n\r\n  const numberWithCommas = (x: string) => {\r\n    if(x === null) return x;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n        <Box style={{marginBottom: '20px'}}>\r\n          <CardIcon>\r\n            <TokenSymbol symbol={bank.earnToken.symbol} />\r\n          </CardIcon>\r\n        </Box>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={getDisplayBalance(earnings)} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${numberWithCommas(earnedInDollars || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n            Total Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n          <Value value={`${(Number(getDisplayBalance(earnings)) * (100.0-rewardsLocked) / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n          ${numberWithCommas((Number(earnedInDollars) * (100.0-rewardsLocked) / 100.0).toFixed(2) || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          {tokenName} Earned\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">\r\n            <Value value={`${(Number(getDisplayBalance(earnings)) * rewardsLocked / 100.0).toFixed(4)}`} />\r\n        </Typography>\r\n        <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n            ${numberWithCommas((Number(earnedInDollars) * rewardsLocked / 100.0).toFixed(2) || '0.00')}\r\n        </Typography>\r\n        <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n          L{tokenName} Earned\r\n        </Typography>\r\n\r\n        <Box className=\"buttonWrap\">\r\n          <Button\r\n              onClick={onReward}\r\n              variant=\"contained\"\r\n              disabled={earnings.eq(0)}\r\n          >\r\n            Claim Rewards\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Harvest;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useStake = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleStake = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.stake(bank.contract, bank.poolId, amountBn),\r\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useWithdraw = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleWithdraw = useCallback(\r\n    (amount: string) => {\r\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\r\n      handleTransactionReceipt(\r\n        tombFinance?.unstake(bank.contract, bank.poolId, amountBn),\r\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract} `,\r\n      );\r\n    },\r\n    [bank, tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onWithdraw: handleWithdraw };\r\n};\r\n\r\nexport default useWithdraw;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button, Typography } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n  decimals?: number;\r\n  withdrawPercentage?: string;\r\n  description?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', decimals = 18, withdrawPercentage, description}) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  withdrawPercentage = withdrawPercentage || '';\r\n\r\n  return (\r\n    <Modal text={`Withdraw ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Typography variant=\"h6\" component=\"p\" style={{marginTop: '20px'}} align=\"center\">\r\n        Current Withdrawal Fee: {withdrawPercentage}%              \r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Withdraw\r\n        </Button>\r\n      </ModalActions>\r\n\r\n      <Typography variant=\"body2\" align=\"center\" className=\"textGlow\" style={{marginTop: '40px'}}>\r\n          {description !== undefined && description !== null ? description : \"Your rewards will be claimed whenever you deposit or withdraw tokens from the pool\"}\r\n      </Typography>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React, { useMemo, useContext } from 'react';\r\n\r\nimport { Box, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport QuestionMark from '@mui/icons-material/QuestionMark';\r\nimport Value from '../../../components/Value';\r\n\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\nimport useStake from '../../../hooks/useStake';\r\nimport useZap from '../../../hooks/useZap';\r\nimport useStakedBalance from '../../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useWithdraw from '../../../hooks/useWithdraw';\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport WithdrawModal from './WithdrawModal';\r\nimport ZapModal from './ZapModal';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Bank } from '../../../tomb-finance';\r\n\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  }\r\n}));\r\n\r\ninterface StakeProps {\r\n  bank: Bank;\r\n  withdrawPercentage: string;\r\n  classname: string;\r\n}\r\n\r\nconst numberWithCommas = (x: string) => {\r\n  if(x === null) return x;\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ bank, withdrawPercentage, classname }) => {\r\n  classname = classname || '';\r\n  withdrawPercentage = withdrawPercentage || '';\r\n  const classes = useStyles();\r\n\r\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\r\n\r\n  const tokenBalance = useTokenBalance(bank.depositToken);\r\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\r\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\r\n    [stakedTokenPriceInDollars],\r\n  );\r\n  const earnedInDollars = (\r\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\r\n  ).toFixed(2);\r\n  const { onStake } = useStake(bank);\r\n  const { onZap } = useZap(bank);\r\n  const { onWithdraw } = useWithdraw(bank);\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onStake(amount);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentZap, onDissmissZap] = useModal(\r\n    <ZapModal\r\n      decimals={bank.depositToken.decimal}\r\n      onConfirm={(zappingToken, tokenName, amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onZap(zappingToken, tokenName, amount);\r\n        onDissmissZap();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      decimals={bank.depositToken.decimal}\r\n      withdrawPercentage={withdrawPercentage}\r\n      onConfirm={(amount) => {\r\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n        onWithdraw(amount);\r\n        onDismissWithdraw();\r\n      }}\r\n      tokenName={bank.depositTokenName}\r\n    />,\r\n  );\r\n\r\n  const handleModalClose = () => {\r\n    onCloseModal();\r\n  };\r\n  \r\n  const [onHandleModal, onCloseModal] = useModal(\r\n    <Modal text=\"Withdrawal Fee\" onDismiss={handleModalClose}>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n        Your withdrawal fee for each pool changes the longer your tokens are staked, from your initial deposit or last withdrawal.\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{marginBottom: '20px',fontWeight: \"500\"}}>\r\n      <strong>The fees are as follows:</strong>\r\n        <ul style={{marginTop:'10px'}}>\r\n          <li>1 block (30 seconds) = 25%</li>\r\n          <li>less than 1 hour = 8%</li>\r\n          <li>less than 1 day = 4%</li>\r\n          <li>less than 3 days = 2%</li>\r\n          <li>less than 5 days = 1%</li>\r\n          <li>less than 2 weeks = 0.5%</li>\r\n          <li>less than 4 weeks = 0.25%</li>\r\n          <li>4 weeks and longer  = 0.01%</li>\r\n        </ul>\r\n      </Typography>\r\n      <Typography variant=\"h6\" color=\"#fff\">\r\n        Depositing or Claiming tokens does not reset your withdrawal fee.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleModalClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card className={classname}>\r\n      <CardContent>\r\n\r\n      <Box className=\"icon-pools\" style={{marginBottom: '20px'}}>\r\n        <CardIcon>\r\n          <TokenSymbol symbol={bank.depositToken.symbol} />\r\n        </CardIcon>{\r\n\r\n          bank.depositTokenName == \"HODL\" ? null : (<CardIcon>\r\n              <TokenSymbol symbol=\"DAI\"/>\r\n          </CardIcon>)\r\n      }\r\n      </Box>\r\n\r\n      <Typography variant=\"h4\">\r\n        <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\r\n      </Typography>\r\n      <Typography variant=\"h4\" component=\"p\" color=\"var(--extra-color-2)\">\r\n        ${numberWithCommas(earnedInDollars || '0.00')}\r\n      </Typography>\r\n      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\" style={{marginBottom: '20px'}}>\r\n        {bank.depositTokenName} Staked\r\n      </Typography>\r\n\r\n            {approveStatus !== ApprovalState.APPROVED ? (\r\n              <Button\r\n                disabled={\r\n                  bank.closedForStaking ||\r\n                  approveStatus === ApprovalState.PENDING ||\r\n                  approveStatus === ApprovalState.UNKNOWN\r\n                }\r\n                onClick={approve}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: '20px' }}\r\n              >\r\n                {`Approve ${bank.depositTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Box className=\"buttonWrap\">\r\n                  <Typography variant=\"body1\" component=\"p\" style={{marginBottom: '20px'}}>\r\n                    Current Withdrawal Fee: {withdrawPercentage}%\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleModal}>\r\n                      <QuestionMark fontSize=\"inherit\" />\r\n                    </Button>\r\n                  </Typography>\r\n\r\n                    { bank.depositTokenName == \"HODL\" ? null : (<Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking || bank.depositTokenName === 'GAME-DAI-LP'}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\r\n                  style={{width: '100%', marginBottom: '20px'}}\r\n                >\r\n\r\n                  <span>Create Liquidity Pool Tokens</span>\r\n                  {/*<FlashOnIcon style={{ color: '#fff', marginLeft: '10px' }} />*/}\r\n                </Button>)\r\n                      }\r\n                <Button variant=\"contained\" onClick={onPresentWithdraw} style={{width: \"calc(50% - 7.5px)\",marginRight: '15px'}}>\r\n                  Withdraw\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled={bank.closedForStaking}\r\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\r\n                  style={{width: \"calc(50% - 7.5px)\"}}\r\n                >\r\n                  Deposit\r\n                </Button>\r\n\r\n                </Box>\r\n              </>\r\n            )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Stake;\r\n","import { useContext } from 'react';\r\nimport { Context as BanksContext } from '../contexts/Banks';\r\nimport { Bank, ContractName } from '../tomb-finance';\r\n\r\nconst useBank = (contractName: ContractName): Bank => {\r\n  const { banks } = useContext(BanksContext);\r\n  return banks.find((bank) => bank.page === contractName);\r\n};\r\n\r\nexport default useBank;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { Bank } from '../tomb-finance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useRedeem = (bank: Bank) => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleRedeem = useCallback(() => {\r\n    handleTransactionReceipt(tombFinance?.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\r\n  }, [bank, tombFinance, handleTransactionReceipt]);\r\n\r\n  return { onRedeem: handleRedeem };\r\n};\r\n\r\nexport default useRedeem;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport { Box, Button, Card, CardContent, Typography, Grid, Paper } from '@mui/material';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport { ExpandMore as ChevronDownIcon } from '@mui/icons-material';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Harvest from './components/Harvest';\r\nimport Stake from './components/Stake';\r\nimport useBank from '../../hooks/useBank';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\nimport useRedeem from '../../hooks/useRedeem';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport useModal from '../../hooks/useModal';\r\nimport Modal, { ModalProps } from '../../components/Modal';\r\nimport ModalActions from '../../components/ModalActions';\r\nimport useTombFinance from \"../../hooks/useTombFinance\";\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  },\r\n  boxed : {\r\n    overflow: 'initial',\r\n    '& .info-wrap': {\r\n      position: 'relative',\r\n      '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: '2px',\r\n        height: 'calc(100% - 20px)',\r\n        background: 'var(--extra-color-1)',\r\n        left: '50%',\r\n        bottom: '0',\r\n        transform: 'translateX(-50%)',\r\n        boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n\r\n      }\r\n    }\r\n  },\r\n  boxClear: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    backdropFilter: 'none',\r\n    '& > *': {\r\n      padding: '0',\r\n      '&:last-child': {\r\n        paddingBottom: '0'\r\n      }\r\n    },\r\n  },\r\n  advanced: {\r\n    textAlign: 'center',\r\n    '& .advanced-toggle' : {\r\n      paddingTop: '20px',\r\n      paddingBottom: '20px',\r\n    },\r\n    '& .advanced-info' : {\r\n      display: 'none',\r\n      marginBottom: '20px'\r\n    },\r\n    '&.open' : {\r\n      '& .advanced-info' : {\r\n        display: 'block',\r\n      },\r\n      '& .advanced-toggle' : {\r\n        '& svg' : {\r\n          transform: 'rotate(180deg)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  boxed2 : {\r\n    position: 'relative',\r\n    border: '0',\r\n    boxShadow: \"none\",\r\n    overflow: 'initial',\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      left: '0',\r\n      width: 'calc(100% - 4px)',\r\n      height: 'calc(100% - 34px)',\r\n      border: '2px solid var(--extra-color-1)',\r\n      borderRadius: \"20px\",\r\n      boxShadow: \"0px 0px 5px var(--extra-color-1)\",\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      paddingTop: '0',\r\n      height: 'calc(100% - 30px)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      '&:last-child': {\r\n        paddingBottom: '30px'\r\n      },\r\n      '& .buttonWrap': {\r\n        marginTop: 'auto'\r\n      }\r\n    },\r\n    '& .blueGlow': {\r\n      color: 'var(--extra-color-1)',\r\n      textShadow: '0px 0px 20px var(--extra-color-1)'\r\n    }\r\n  },\r\n}));\r\n\r\nconst numberWithCommas = (x: { toString: () => string; }) => {\r\n  if(x === null) return x;\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n//TODO: Get deposit fee from contract?\r\nconst Bank: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const classes = useStyles();\r\n  const tombFinance = useTombFinance();\r\n  const { bankId } = useParams();\r\n  const bank = useBank(bankId);\r\n\r\n  const { account } = useWallet();\r\n  const { onRedeem } = useRedeem(bank);\r\n  const statsOnPool = useStatsForPool(bank);\r\n\r\n  const [AdvancedOpen, setAdvancedOpen] = React.useState(false);\r\n\r\n  const handleAdvancedOpen = () => {\r\n    (AdvancedOpen === false) ? setAdvancedOpen(true) : setAdvancedOpen(false);\r\n  };\r\n\r\n  const handleRewardsClose = () => {\r\n    onCloseRewards();\r\n  };\r\n  \r\n  const [onHandleRewards, onCloseRewards] = useModal(\r\n    <Modal text=\"Rewards\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>THEORY</strong><br />Are THEORY tokens which are available to you straight away.<br /><br />\r\n      <strong>LTHEORY</strong><br />Locked THEORY Tokens are claimable however they are locked until March 24th, 2023. They then take 12 months to fully unlock.<br /><br />\r\n      <strong>Unlocking LTHEORY</strong><br />some LTHEORY tokens can be unlocked early by using an NFT.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleRewardsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  const handleStatsClose = () => {\r\n    onCloseStats();\r\n  };\r\n  \r\n  const [onHandleStats, onCloseStats] = useModal(\r\n    <Modal text=\"Advanced Stats\" onDismiss={onDismiss}>\r\n      <Typography variant=\"h6\" color=\"#fff\" align=\"center\" style={{fontWeight: \"500\"}}>\r\n      <strong>LTHEORY %</strong><br />The percentage of your rewards if you claim that will be in Locked THEORY Tokens. This percentage decreases by 2% every week until March 24th, 2023 when all THEORY tokens will have been distributed.<br /><br />\r\n\r\n      <strong>Total Value Locked</strong><br />The total USD value of tokens staked in the pool.\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleStatsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return account && bank ? (\r\n    <>\r\n      <div className=\"section\">\r\n      <Typography align=\"center\" variant=\"h2\" component=\"h1\" className=\"textGlow pink\" style={{marginBottom: '20px'}}>\r\n        {bank?.depositTokenName.replace('LP', 'Liquidity')} Pool\r\n      </Typography>\r\n      <Typography align=\"center\" variant=\"h5\" component=\"p\" style={{marginBottom: '50px', fontWeight: '500'}}>\r\n        Deposit {bank?.depositTokenName} tokens & earn {bank?.earnTokenName}\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\" spacing={3} style={{marginBottom: '30px'}}>\r\n            <Grid item xs={12} md={6}>\r\n              <div>\r\n              <Card className={classes.boxed}>\r\n                <CardContent>\r\n                  <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n                    Rewards\r\n                    <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleRewards}>\r\n                      <QuestionMarkIcon fontSize='inherit' />\r\n                    </Button>\r\n                  </Typography>\r\n                  <div className='info-wrap'>\r\n                  <Grid container justifyContent=\"center\" spacing={3}>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*(100.0-Number(statsOnPool?.locked))/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{numberWithCommas(bank.closedForStaking ? '0.00' : (Number(statsOnPool?.yearlyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2) || '0.00')}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Yearly Rewards</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">{bank.closedForStaking ? '0.00' : (Number(statsOnPool?.dailyAPR)*Number(statsOnPool?.locked)/100.0).toFixed(2)}%</Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">L{bank.earnTokenName} Daily Rewards</Typography>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              </div>\r\n              <div className={`${classes.advanced} ${AdvancedOpen ? 'open' : ''}`}>\r\n                <div className='advanced-toggle' onClick={handleAdvancedOpen}>\r\n                  <Typography align=\"center\" style={{display: 'inline-block',cursor: 'pointer', fontWeight: '700'}} className=\"textGlow pink\">\r\n                    <span style={{verticalAlign: 'middle'}}>{AdvancedOpen ? \"Hide Advanced\" : \"Show Advanced\"}</span>\r\n                    <ChevronDownIcon style={{verticalAlign: 'middle'}} />\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"advanced-info\">\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '10px'}}>\r\n                        Advanced Stats\r\n                        <Button variant=\"contained\" className={classes.button} aria-label=\"Advanced stats info\" style={{ marginLeft: '10px' }} onClick={onHandleStats}>\r\n                          <QuestionMarkIcon fontSize='inherit' />\r\n                        </Button>\r\n                      </Typography>\r\n                      <Grid container justifyContent=\"center\">\r\n                        <TableContainer component={Paper} style={{width: 'initial'}}>\r\n                          <Table aria-label=\"advanced info table\">\r\n                            <TableBody>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    L{bank.earnTokenName} %\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    {statsOnPool?.locked}%\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n\r\n                              <TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    Total Value Locked\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    ${numberWithCommas(statsOnPool?.TVL || '0.00')}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                              {bank?.depositTokenName.includes(\"LP\") ?\r\n                              (<TableRow>\r\n                                <TableCell align=\"right\">\r\n                                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">\r\n                                    Add Liquidity on SpookySwap\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography>\r\n                                    <StyledLink href={'https://spooky.fi/#/add/' + (bank?.depositTokenName.includes('GAME') ? tombFinance?.TOMB.address : tombFinance?.TSHARE.address) + \"/0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E\"} target=\"_blank\">\r\n                                      Here\r\n                                    </StyledLink>\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>) : null}\r\n\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid item xs={12} md={4}>\r\n          <Harvest bank={bank} rewardsLocked={Number(statsOnPool?.locked)} classname=\"boxed\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Stake bank={bank} withdrawPercentage={statsOnPool?.fee} classname=\"boxed\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      </div>\r\n    </>\r\n  ) : !bank ? (\r\n    <BankNotFound />\r\n  ) : (\r\n    <UnlockWallet />\r\n  );\r\n};\r\n\r\nconst BankNotFound = () => {\r\n  return (\r\n    <Center>\r\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"Please return to the homepage and try again later.\" />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst Center = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nconst StyledLink = styled.a`\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.color.primary.main};\r\n`;\r\n\r\nexport default Bank;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\n\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import React, {useCallback, useEffect, useMemo, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Box, Card, CardContent, Typography, Grid, Button} from '@mui/material';\r\n\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport CardIcon from '../../components/CardIcon';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\n\r\nimport useStakedBalance from '../../hooks/useStakedBalance';\r\nimport useStakedTokenPriceInDollars from '../../hooks/useStakedTokenPriceInDollars';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\n\r\nimport useTombStats from '../../hooks/useTombStats';\r\nimport useShareStats from '../../hooks/usetShareStats';\r\nimport useEarnings from '../../hooks/useEarnings';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport useModal from \"../../hooks/useModal\";\r\nimport DepositModal from \"../Bank/components/DepositModal\";\r\nimport useTokenBalance from \"../../hooks/useTokenBalance\";\r\nimport ERC20 from \"../../tomb-finance/ERC20\";\r\nimport { getDefaultProvider } from '../../utils/provider';\r\nimport useApprove, {ApprovalState} from \"../../hooks/useApprove\";\r\nimport useTombFinance from \"../../hooks/useTombFinance\";\r\nimport {useHasPendingApproval, useTransactionAdder} from \"../../state/transactions/hooks\";\r\nimport useAllowance from \"../../hooks/useAllowance\";\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\nimport {BigNumber} from \"ethers\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport {decimalToBalance} from \"../../tomb-finance/ether-utils\";\r\nimport useHandleTransactionReceipt from \"../../hooks/useHandleTransactionReceipt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  blueGlow: {\r\n    color: 'var(--extra-color-1)',\r\n    textShadow: '0px 0px 20px var(--extra-color-1)'\r\n  },\r\n}));\r\n\r\nfunction useMigrationBalance(tombFinance, token) {\r\n    const [balance, setBalance] = useState(BigNumber.from(0));\r\n    const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n    const fetchBalance = useCallback(async () => {\r\n        setBalance(await tombFinance?.contracts.Migrator.balanceOf(tombFinance?.myAccount, token.address));\r\n    }, [tombFinance?.myAccount, token.address]);\r\n\r\n    useEffect(() => {\r\n        if (isUnlocked) {\r\n            fetchBalance().catch((err) => console.error(`Failed to fetch migration balance: ${err.stack}`));\r\n            let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n            return () => clearInterval(refreshInterval);\r\n        }\r\n    }, [isUnlocked, fetchBalance, tombFinance]);\r\n\r\n    return balance;\r\n}\r\n\r\nfunction useMaxMigration(tombFinance, token) {\r\n    const [balance, setBalance] = useState(BigNumber.from(0));\r\n    const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n    const fetchBalance = useCallback(async () => {\r\n        const res = await axios.post('https://migration.gametheory.tech/.netlify/functions/server/maxBN', { address: tombFinance?.myAccount, token: token.address });\r\n        if(res.data.amount !== \"error\") setBalance(BigNumber.from(res.data.amount));\r\n    }, [tombFinance?.myAccount, token.address]);\r\n\r\n    useEffect(() => {\r\n        if (isUnlocked) {\r\n            fetchBalance().catch((err) => console.error(`Failed to fetch max migration: ${err.stack}`));\r\n            let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n            return () => clearInterval(refreshInterval);\r\n        }\r\n    }, [isUnlocked, fetchBalance, tombFinance]);\r\n\r\n    return balance;\r\n}\r\n\r\nconst useStake = () => {\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleStake = useCallback(\r\n        (tombFinance, token, amount) => {\r\n            // noinspection JSCheckFunctionSignatures\r\n            handleTransactionReceipt(\r\n                tombFinance.migrate(token.address, amount), `Transfer ${amount} ${token.name} for migration`);\r\n        },\r\n        [handleTransactionReceipt],\r\n    );\r\n    return { onStake: handleStake };\r\n};\r\n\r\nconst MigrationCard = ({ token, classname }) => {\r\n  const classes = useStyles();\r\n  classname = classname || '';\r\n    const tombFinance = useTombFinance();\r\n    const [contract, setContract] = useState(new ERC20(token.address, getDefaultProvider(), token.name, 18));\r\n    const tokenBalance = useTokenBalance(contract);\r\n    const migrationBalance = useMigrationBalance(tombFinance, token);\r\n    const maxMigration = useMaxMigration(tombFinance, token);\r\n    const maxMigrationReduced = maxMigration.sub(migrationBalance);\r\n    const maxBalance = tokenBalance.lt(maxMigrationReduced) ? tokenBalance : maxMigrationReduced;\r\n    const [signed, setSigned] = useState(false);\r\n    const {onStake} = useStake();\r\n    if(tombFinance?.signer && !signed)\r\n    {\r\n        contract.connect(tombFinance?.signer);\r\n        setSigned(true);\r\n    }\r\n    const [approveStatus, approve] = useApprove(contract, tombFinance?.contracts.Migrator.address);\r\n    const [onPresentDeposit, onDismissDeposit] = useModal(\r\n        <DepositModal\r\n            max={maxBalance}\r\n            decimals={18}\r\n            onConfirm={(amount) => {\r\n                if (Number(amount) <= 0 || isNaN(Number(amount))) return;\r\n                onStake(tombFinance, token, amount);\r\n                onDismissDeposit();\r\n            }}\r\n            tokenName={token.name}\r\n            description={\"Make sure you want to migrate these tokens, as this action is irreversible.\"}\r\n        />,\r\n    );\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Card className={classname}>\r\n        <CardContent align=\"center\">\r\n            <Box className=\"icon-pools\" style={{marginBottom: '20px'}}>\r\n              <CardIcon>\r\n                <TokenSymbol symbol={token.name} />\r\n              </CardIcon>\r\n              {\r\n\r\n                !token.name.endsWith(\"-DAI\") ? null : (<CardIcon>\r\n                  <TokenSymbol symbol=\"DAI\"/>\r\n                </CardIcon>)\r\n              }\r\n            </Box>\r\n            <Typography variant=\"h4\" className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n              {token.name}\r\n            </Typography>\r\n            <Typography variant=\"body1\" style={{marginBottom: '20px'}}>\r\n              Irreversibly deposit {token.name} tokens and earn {!token.name.endsWith(\"-DAI\") ? \"GAME\" : \"GAME-USDC.e\"} on Avalanche launch.\r\n            </Typography>\r\n            <div className='info-wrap'>\r\n              <Grid container spacing={3}>\r\n\r\n                  <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                          {getDisplayBalance(migrationBalance, 18, 2)} / {getDisplayBalance(maxMigration, 18, 2)}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Migration Balance</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" color=\"var(--extra-color-2)\">\r\n                          {token.migrationMultiplier}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" component=\"p\" className={classes.blueGlow}>Migration Multiplier</Typography>\r\n                  </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n            {/*{approveStatus !== ApprovalState.APPROVED ? (*/}\r\n            {/*    <Box className=\"buttonWrap\">*/}\r\n            {/*        <Button*/}\r\n            {/*            disabled={approveStatus !== ApprovalState.NOT_APPROVED}*/}\r\n            {/*            variant=\"contained\"*/}\r\n            {/*            style={{ marginTop: '20px' }}*/}\r\n            {/*            onClick={approve}*/}\r\n            {/*        >*/}\r\n            {/*            Approve*/}\r\n            {/*        </Button>*/}\r\n            {/*    </Box>*/}\r\n            {/*) : (*/}\r\n            {/*    <Box className=\"buttonWrap\">*/}\r\n            {/*    <Button variant=\"contained\" style={{ marginTop: '20px' }} onClick={onPresentDeposit}>*/}\r\n            {/*        Migrate*/}\r\n            {/*    </Button>*/}\r\n            {/*    </Box>*/}\r\n            {/*)}*/}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MigrationCard;\r\n","import React, { useMemo } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { Route, Switch, useRouteMatch, Link } from 'react-router-dom';\r\nimport Bank from '../Bank';\r\n\r\nimport { Box, Paper, Card, CardContent, Typography, Grid } from '@mui/material';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\nimport MigrationCard from './MigrationCard';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport CardIcon from '../../components/CardIcon';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\n\r\nimport useBanks from '../../hooks/useBanks';\r\nimport useTreasury from \"../../hooks/useTreasury\";\r\nimport useFetchMasonryAPR from '../../hooks/useFetchMasonryAPR';\r\nimport useEarningsOnMasonry from '../../hooks/useEarningsOnMasonry';\r\n\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport useTombStats from '../../hooks/useTombStats';\r\n\r\nimport useStakedTokenPriceInDollars from '../../hooks/useStakedTokenPriceInDollars';\r\nimport useStakedBalanceOnMasonry from '../../hooks/useStakedBalanceOnMasonry';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\n\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport useFetchDungeonAPR from \"../../hooks/useFetchDungeonAPR\";\r\nimport useEarningsOnDungeon from \"../../hooks/useEarningsOnDungeon\";\r\nimport useStakedBalanceInTheoryOnDungeon from \"../../hooks/useStakedBalanceInTheoryOnDungeon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n}));\r\n\r\nconst Migration = () => {\r\n  const classes = useStyles();\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const whitelistedTokens = [\r\n    {address: \"0x56EbFC2F3873853d799C155AF9bE9Cb8506b7817\", migrationMultiplier: \"1.0\", name: \"GAME\"},\r\n    {address: \"0x60787C689ddc6edfc84FCC9E7d6BD21990793f06\", migrationMultiplier: \"1.0\", name: \"THEORY\"},\r\n    {address: \"0xFfF54fcdFc0E4357be9577D8BC2B4579ce9D5C88\", migrationMultiplier: \"1.1\", name: \"HODL\"},\r\n    {address: \"0x83641AA58E362A4554e10AD1D120Bf410e15Ca90\", migrationMultiplier: \"2.0\", name: \"MASTER\"},\r\n    {address: \"0x168e509FE5aae456cDcAC39bEb6Fd56B6cb8912e\", migrationMultiplier: \"1.0\", name: \"GAME-DAI\"},\r\n    {address: \"0xF69FCB51A13D4Ca8A58d5a8D964e7ae5d9Ca8594\", migrationMultiplier: \"1.0\", name: \"THEORY-DAI\"}]\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <Route exact path={path}>\r\n          {!!account ? (\r\n            <Paper maxwidth=\"lg\" className=\"section\">\r\n\r\n\r\n              <Typography align=\"center\" variant=\"h2\" className=\"textGlow pink\" style={{marginBottom: '50px'}}>\r\n                Migration\r\n              </Typography>\r\n              <Typography align=\"center\">Those with an NFT will automatically get airdropped a new one on Avalanche upon launch. There is no need to migrate your NFT because there are no calculations required.</Typography>\r\n              <br/>\r\n              <Typography align=\"center\">Make sure to withdraw from all pools/Theoretics before trying to migrate. You can only migrate as much as you had during the snapshot on May 20th.</Typography>\r\n              <br/>\r\n              <Typography align=\"center\">You cannot migrate LTHEORY or LGAME. This is a strategic decision to avoid bad debt and help retain investor funds. If you have not exited, your percentage of GAME should make up for it. We apologize for any inconvenience.</Typography>\r\n              <br/>\r\n              <Typography align=\"center\">Migration has ended on {`${new Date(Date.UTC(2022, 5, 16, 12, 0, 0, 0))}`}</Typography>\r\n              <br/>\r\n              <Grid container justifyContent=\"center\" spacing={3}>\r\n\r\n                {whitelistedTokens\r\n                  .map((token) => (\r\n                    <React.Fragment key={token.name}>\r\n                      <MigrationCard token={token} classname=\"boxed link\" />\r\n                    </React.Fragment>\r\n                ))}\r\n              </Grid>\r\n\r\n\r\n            </Paper>\r\n          ) : (\r\n            <UnlockWallet />\r\n          )}\r\n        </Route>\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Migration;\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText className=\"textGlow\">\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <Button style={styleButton} size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n              Max\r\n            </Button>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div``;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst styleButton = {\r\n  height: '56px',\r\n  borderTopLeftRadius: '0',\r\n  borderBottomLeftRadius: '0'\r\n};\r\n\r\nexport default TokenInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'QuestionMark');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\ninterface ValueProps {\r\n  value: string;\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({ value }) => {\r\n  return <StyledValue>{value}</StyledValue>;\r\n};\r\n\r\nconst StyledValue = styled.div`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default Value;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\n\r\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\r\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await tombFinance?.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\r\n    setStakedTokenPriceInDollars(balance);\r\n  }, [stakedToken, stakedTokenName, tombFinance]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(err.stack));\r\n\r\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\r\n    }\r\n  }, [isUnlocked, setStakedTokenPriceInDollars, tombFinance, fetchBalance]);\r\n\r\n  return stakedTokenPriceInDollars;\r\n};\r\n\r\nexport default useStakedTokenPriceInDollars;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport { LPStat } from '../tomb-finance/types';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst useLpStats = (lpTicker: string) => {\r\n  const [stat, setStat] = useState<LPStat>();\r\n  const { slowRefresh } = useRefresh();\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchLpPrice() {\r\n      try{\r\n        setStat(await tombFinance?.getLPStat(lpTicker));\r\n      }\r\n      catch(err){\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchLpPrice();\r\n  }, [setStat, tombFinance, slowRefresh, lpTicker]);\r\n\r\n  return stat;\r\n};\r\n\r\nexport default useLpStats;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useTokenNoUnlockBeforeTranfer = (token: ERC20Lockable) => {\r\n  const [noUnlock, setNoUnlock] = useState(false);\r\n  const tombFinance = useTombFinance();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setNoUnlock(await token.noUnlockBeforeTransfer(tombFinance?.myAccount));\r\n  }, [token, tombFinance?.myAccount]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked) {\r\n      fetchBalance().catch((err) => console.error(`Failed to fetch token lock: ${err.stack}`));\r\n      let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [isUnlocked, token, fetchBalance, tombFinance]);\r\n\r\n  return noUnlock;\r\n};\r\n\r\nexport default useTokenNoUnlockBeforeTranfer;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20Lockable from '../tomb-finance/ERC20Lockable';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport useHandleTransactionReceipt from \"./useHandleTransactionReceipt\";\r\n\r\nconst useSetTokenNoUnlockBeforeTransfer = (token: ERC20Lockable) => {\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleSetTokenNoUnlockBeforeTransfer = useCallback(\r\n      () => {\r\n        handleTransactionReceipt(\r\n            token.setNoUnlockBeforeTransfer(true),\r\n            `Approve Unlock On Claim`,\r\n        );\r\n      },\r\n      [token, handleTransactionReceipt],\r\n  );\r\n  return { onSetTokenNoUnlockBeforeTransfer: handleSetTokenNoUnlockBeforeTransfer };\r\n};\r\n\r\nexport default useSetTokenNoUnlockBeforeTransfer;\r\n"],"sourceRoot":""}