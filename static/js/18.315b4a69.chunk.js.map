{"version":3,"sources":["components/ModalActions/ModalActions.tsx","components/CardIcon/CardIcon.tsx","hooks/useAllowance.ts","components/UnlockWallet/UnlockWallet.tsx","components/Input/Input.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","views/Nft/components/TokenInput.tsx","views/Nft/components/DepositModal.tsx","hooks/useMintTheoryUnlocker.ts","hooks/useMaxLevel.ts","hooks/useTheoryUnlockerTotalSupply.ts","hooks/useTheoryUnlockerOwnerSupply.ts","views/Nft/components/Mint.tsx","hooks/useUnlockTheoryWithNFT.ts","hooks/useLevelUpTheoryUnlocker.ts","views/Nft/components/MergeInput.tsx","views/Nft/components/MergeModal.tsx","hooks/useMergeTheoryUnlocker.ts","views/Nft/Nft.js"],"names":["StyledModalActions","styled","div","props","theme","color","grey","spacing","StyledModalAction","StyledSpacer","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledCardIcon","CardIcon","useAllowance","token","spender","pendingApproval","useState","allowance","setAllowance","account","useWallet","fastRefresh","useRefresh","fetchAllowance","useCallback","a","useEffect","catch","err","console","error","stack","UnlockWallet","Box","style","position","top","left","transform","AccountButton","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApprove","useHasPendingApproval","address","currentAllowance","approvalState","useMemo","lt","PENDING","NOT_APPROVED","APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","size","Spacer","s","useContext","ThemeContext","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","onSelectMax","toLocaleString","Button","variant","onClick","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","fullBalance","toNumber","toString","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","text","useMintTheoryUnlocker","tombFinance","useTombFinance","handleTransactionReceipt","useHandleTransactionReceipt","onMint","amount","mintTheoryUnlocker","useMaxLevel","maxLevel","setMaxLevel","slowRefresh","isUnlocked","getMaxTheoryUnlockerLevel","getMaxLevel","useTotalSupply","totalSupply","setTotalSupply","getTheoryUnlockerTotalSupply","getTotalSupply","useOwnerSupply","ownerSupply","setOwnerSupply","getTheoryUnlockerOwnerSupply","myAccount","getOwnerSupply","StyledCardHeader","StyledCardContentInner","Mint","FTM","contracts","TheoryUnlocker","useTheoryUnlockerOwnerSupply","useTheoryUnlockerTotalSupply","useModal","onDismissDeposit","Card","CardContent","TokenSymbol","Label","eq","useUnlockTheoryWithNFT","onUnlockTheory","tokenId","unlockTheoryWithNFT","useLevelUpTheoryUnlocker","onLevelUp","levelUpTheoryUnlocker","StyledMergeInput","MergeInput","MergeModal","useMergeTheoryUnlocker","onMerge","tokenId1","tokenId2","mergeTheoryUnlocker","BackgroundImage","createGlobalStyle","useStyles","makeStyles","gridItem","height","breakpoints","up","StyledActionSpacer","StyledCardWrapper","Nft","selectedId","onDismissMerge","onPresentMerge","theoryUnlockers","useFetchTheoryUnlockers","Page","Typography","align","gutterBottom","Alert","severity","marginTop","Date","mt","item","index","time","timeLeftToLevel","days","Math","floor","hoursLeft","hours","minutesLeft","minutes","ceil","token_id","attributes","level","url","animation_url","controls","muted","playing","loop","disabled","unlockAmount","getDisplayBalance","gte","add","minimumIntegerDigits","useGrouping"],"mappings":"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","file":"static/js/18.315b4a69.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length;\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <StyledSpacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  );\r\n};\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  height: 96px;\r\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\r\n    ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nexport default ModalActions;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CardIconProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CardIcon: React.FC<CardIconProps> = ({ children }) => <StyledCardIcon>{children}</StyledCardIcon>;\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: none;\r\n  font-size: 36px;\r\n  height: 95px;\r\n  width: 95px;\r\n  border-radius: 40px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  box-shadow: none !important;\r\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nexport default CardIcon;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\r\n  const [allowance, setAllowance] = useState<BigNumber>(null);\r\n  const { account } = useWallet();\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await token.allowance(account, spender);\r\n    setAllowance(allowance);\r\n  }, [account, spender, token]);\r\n\r\n  useEffect(() => {\r\n    if (account && spender && token) {\r\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\r\n    }\r\n  }, [account, spender, token, pendingApproval, fetchAllowance, fastRefresh]);\r\n\r\n  return allowance;\r\n};\r\n\r\nexport default useAllowance;\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport AccountButton from '../Nav/AccountButton';\r\n\r\nconst UnlockWallet = () => {\r\n  return (\r\n    <Box style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      <AccountButton />\r\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnlockWallet;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode;\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  startAdornment?: React.ReactNode;\r\n  value: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: white;\r\n  border-radius: ${(props) => props.theme.borderRadius}px;\r\n  display: flex;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`;\r\n\r\nexport default Input;\r\n","import { BigNumber, ethers } from 'ethers';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\r\nimport useAllowance from './useAllowance';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\r\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\r\n  const pendingApproval = useHasPendingApproval(token.address, spender);\r\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED;\r\n  }, [currentAllowance, pendingApproval]);\r\n\r\n  const addTransaction = useTransactionAdder();\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily');\r\n      return;\r\n    }\r\n\r\n    const response = await token.approve(spender, APPROVE_AMOUNT);\r\n    addTransaction(response, {\r\n      summary: `Approve ${token.symbol}`,\r\n      approval: {\r\n        tokenAddress: token.address,\r\n        spender: spender,\r\n      },\r\n    });\r\n  }, [approvalState, fastRefresh, token, spender, addTransaction]);\r\n\r\n  return [approvalState, approve];\r\n}\r\n\r\nexport default useApprove;\r\n","import React, { useContext } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext);\r\n\r\n  let s: number;\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6];\r\n      break;\r\n    case 'sm':\r\n      s = spacing[2];\r\n      break;\r\n    case 'md':\r\n    default:\r\n      s = spacing[4];\r\n  }\r\n\r\n  return <StyledSpacer size={s} />;\r\n};\r\n\r\ninterface StyledSpacerProps {\r\n  size: number;\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`;\r\n\r\nexport default Spacer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../../../components/Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n    max: number | string;\r\n    symbol: string;\r\n    onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n    return (\r\n        <StyledTokenInput>\r\n            <StyledMaxText>\r\n                Up to {max.toLocaleString()} levels currently available.\r\n            </StyledMaxText>\r\n            <Input\r\n                endAdornment={\r\n                    <StyledTokenAdornmentWrapper>\r\n                        {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n                        <StyledSpacer />\r\n                        <div>\r\n                            <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                                Max\r\n                            </Button>\r\n                        </div>\r\n                    </StyledTokenAdornmentWrapper>\r\n                }\r\n                onChange={onChange}\r\n                placeholder=\"0\"\r\n                value={value}\r\n            />\r\n        </StyledTokenInput>\r\n    );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default TokenInput;","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button } from '@mui/material';\r\n// import Button from '../../../components/Button'\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport TokenInput from './TokenInput';\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const fullBalance = max.toNumber().toString();\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Buy levels using DAI. Each level costs 500 DAI.`} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Mint\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useMintTheoryUnlocker = () => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleMint = useCallback(\r\n    (amount: string) => {\r\n      handleTransactionReceipt(tombFinance.mintTheoryUnlocker(amount), `Mint level ${amount} Theory Unlocker.`);\r\n    },\r\n    [tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onMint: handleMint };\r\n};\r\n\r\nexport default useMintTheoryUnlocker;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\nimport {BigNumber} from \"ethers\";\r\n\r\nconst useMaxLevel = () => {\r\n  const [maxLevel, setMaxLevel] = useState(BigNumber.from(5));\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function getMaxLevel() {\r\n      try {\r\n        setMaxLevel(await tombFinance.getMaxTheoryUnlockerLevel());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      getMaxLevel();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return maxLevel;\r\n};\r\n\r\nexport default useMaxLevel;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\nimport {BigNumber} from \"ethers\";\r\n\r\nconst useTotalSupply = () => {\r\n  const [totalSupply, setTotalSupply] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function getTotalSupply() {\r\n      try {\r\n        setTotalSupply(await tombFinance.getTheoryUnlockerTotalSupply());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      getTotalSupply();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return totalSupply;\r\n};\r\n\r\nexport default useTotalSupply;\r\n","import { useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useRefresh from './useRefresh';\r\nimport {BigNumber} from \"ethers\";\r\n\r\nconst useOwnerSupply = () => {\r\n  const [ownerSupply, setOwnerSupply] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n  const { slowRefresh } = useRefresh();\r\n  const isUnlocked = tombFinance?.isUnlocked;\r\n\r\n  useEffect(() => {\r\n    async function getOwnerSupply() {\r\n      try {\r\n        setOwnerSupply(await tombFinance.getTheoryUnlockerOwnerSupply(tombFinance.myAccount));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    if (isUnlocked) {\r\n      getOwnerSupply();\r\n    }\r\n  }, [isUnlocked, tombFinance, slowRefresh]);\r\n\r\n  return ownerSupply;\r\n};\r\n\r\nexport default useOwnerSupply;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Box, Button, Card, CardContent, Typography } from '@mui/material';\r\n\r\nimport CardIcon from '../../../components/CardIcon';\r\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\r\nimport IconButton from '../../../components/IconButton';\r\nimport Label from '../../../components/Label';\r\n\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useModal from '../../../hooks/useModal';\r\n\r\nimport DepositModal from './DepositModal';\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useMintTheoryUnlocker from \"../../../hooks/useMintTheoryUnlocker\";\r\nimport useMaxLevel from \"../../../hooks/useMaxLevel\";\r\nimport useTheoryUnlockerTotalSupply from \"../../../hooks/useTheoryUnlockerTotalSupply\";\r\nimport useTheoryUnlockerOwnerSupply from \"../../../hooks/useTheoryUnlockerOwnerSupply\";\r\n\r\nconst Mint: React.FC = () => {\r\n  const tombFinance = useTombFinance();\r\n  const [approveStatus, approve] = useApprove(tombFinance.FTM, tombFinance.contracts.TheoryUnlocker.address);\r\n\r\n  const { onMint } = useMintTheoryUnlocker();\r\n  const maxLevel = useMaxLevel();\r\n  const ownerSupply = useTheoryUnlockerOwnerSupply();\r\n  const totalSupply = useTheoryUnlockerTotalSupply();\r\n\r\n  const [onPresentDeposit, onDismissDeposit] = useModal(\r\n    <DepositModal\r\n      max={maxLevel}\r\n      onConfirm={(value) => {\r\n        onMint(value);\r\n        onDismissDeposit();\r\n      }}\r\n      tokenName={'Level'}\r\n    />,\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Card>\r\n        <CardContent>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <CardIcon>\r\n                <TokenSymbol symbol=\"TSHARE\" />\r\n              </CardIcon>\r\n\r\n              <Label text={`You have ${ownerSupply.toNumber()} out of ${totalSupply.toNumber()} ${totalSupply.eq(1) ? \"Theory Unlocker\" : \"Theory Unlockers\"}`} />\r\n                <Label text={'Max supply of Bronze reached. You can no longer mint for now.'} />\r\n            </StyledCardHeader>\r\n            {/*<StyledCardActions>*/}\r\n            {/*  {approveStatus !== ApprovalState.APPROVED ? (*/}\r\n            {/*    <Button*/}\r\n            {/*      disabled={approveStatus !== ApprovalState.NOT_APPROVED}*/}\r\n            {/*      variant=\"contained\"*/}\r\n            {/*      color=\"primary\"*/}\r\n            {/*      style={{ marginTop: '20px' }}*/}\r\n            {/*      onClick={approve}*/}\r\n            {/*    >*/}\r\n            {/*      Approve DAI*/}\r\n            {/*    </Button>*/}\r\n            {/*  ) : (*/}\r\n            {/*    <>*/}\r\n            {/*      <IconButton onClick={onPresentDeposit}>*/}\r\n            {/*        <AddIcon />*/}\r\n            {/*      </IconButton>*/}\r\n            {/*    </>*/}\r\n            {/*  )}*/}\r\n            {/*</StyledCardActions>*/}\r\n          </StyledCardContentInner>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Mint;","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {BigNumber} from \"ethers\";\r\n\r\nconst useUnlockTheoryWithNFT = () => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleUnlockTheory = useCallback(\r\n    (tokenId: BigNumber | number) => {\r\n      handleTransactionReceipt(\r\n        tombFinance.unlockTheoryWithNFT(tokenId),\r\n        `Unlock LTHEORY to THEORY with NFT ${tokenId}.`,\r\n      );\r\n    },\r\n    [tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onUnlockTheory: handleUnlockTheory };\r\n};\r\n\r\nexport default useUnlockTheoryWithNFT;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport {BigNumber} from \"ethers\";\r\n\r\nconst useLevelUpTheoryUnlocker = () => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleLevelUp = useCallback(\r\n    (tokenId: BigNumber | number) => {\r\n      handleTransactionReceipt(\r\n        tombFinance.levelUpTheoryUnlocker(tokenId),\r\n        `Level up NFT ${tokenId}.`,\r\n      );\r\n    },\r\n    [tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onLevelUp: handleLevelUp };\r\n};\r\n\r\nexport default useLevelUpTheoryUnlocker;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../../../components/Input';\r\n\r\ninterface MergeInputProps extends InputProps {\r\n    symbol: string;\r\n    onSelectMax?: () => void;\r\n}\r\n\r\nconst MergeInput: React.FC<MergeInputProps> = ({ onChange, value }) => {\r\n    return (\r\n        <StyledMergeInput>\r\n            <StyledMaxText>\r\n                Note that the color of the token will be of the token you clicked the merge button on first.\r\n            </StyledMaxText>\r\n            <StyledMaxText>\r\n                The combined level of the two NFTs cannot exceed the current max level.\r\n            </StyledMaxText>\r\n            <Input\r\n                // endAdornment={\r\n                //     <StyledTokenAdornmentWrapper>\r\n                //         {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n                //         <StyledSpacer />\r\n                //         <div>\r\n                //             <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n                //                 Max\r\n                //             </Button>\r\n                //         </div>\r\n                //     </StyledTokenAdornmentWrapper>\r\n                // }\r\n                onChange={onChange}\r\n                placeholder=\"0\"\r\n                value={value}\r\n            />\r\n        </StyledMergeInput>\r\n    );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledMergeInput = styled.div``;\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport default MergeInput;","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { Button } from '@mui/material';\r\n// import Button from '../../../components/Button'\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport ModalTitle from '../../../components/ModalTitle';\r\nimport MergeInput from './MergeInput';\r\n\r\ninterface MergeModalProps extends ModalProps {\r\n  onConfirm: (amount: string) => void;\r\n  tokenName?: string;\r\n}\r\n\r\nconst MergeModal: React.FC<MergeModalProps> = ({ onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('');\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Select the ID of the token you wish to merge with.`} />\r\n      <MergeInput\r\n        value={val}\r\n        onChange={handleChange}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\r\n          Let's Go\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MergeModal;\r\n","import { useCallback } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useMergeTheoryUnlocker = () => {\r\n  const tombFinance = useTombFinance();\r\n  const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n  const handleMerge = useCallback(\r\n    (tokenId1: string, tokenId2: string) => {\r\n      handleTransactionReceipt(tombFinance.mergeTheoryUnlocker(tokenId1, tokenId2), `Merge Theory Unlocker ${tokenId1} with Theory Unlocker ${tokenId2}.`);\r\n    },\r\n    [tombFinance, handleTransactionReceipt],\r\n  );\r\n  return { onMerge: handleMerge };\r\n};\r\n\r\nexport default useMergeTheoryUnlocker;\r\n","import React, { useMemo } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\nimport Spacer from '../../components/Spacer';\r\nimport Mint from './components/Mint';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@mui/material';\r\n\r\nimport { Alert } from '@mui/lab';\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport Page from '../../components/Page';\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport axios from \"axios\";\r\nimport useFetchTheoryUnlockers from \"../../hooks/useFetchTheoryUnlockers\";\r\nimport Label from \"../../components/Label\";\r\nimport useTokenCanUnlockAmount from \"../../hooks/useTokenCanUnlockAmount\";\r\nimport {getDisplayBalance} from \"../../utils/formatBalance\";\r\nimport useUnlockTheory from \"../../hooks/useUnlockTheory\";\r\nimport useUnlockTheoryWithNFT from \"../../hooks/useUnlockTheoryWithNFT\";\r\nimport useMaxLevel from \"../../hooks/useMaxLevel\";\r\nimport useLevelUpTheoryUnlocker from \"../../hooks/useLevelUpTheoryUnlocker\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport MergeModal from \"./components/MergeModal\";\r\nimport useMintTheoryUnlocker from \"../../hooks/useMintTheoryUnlocker\";\r\nimport useMergeTheoryUnlocker from \"../../hooks/useMergeTheoryUnlocker\";\r\n\r\n// const BackgroundImage = createGlobalStyle`\r\n//   body, html {\r\n//     background: url(${MasonryImage}) no-repeat !important;\r\n//     background-size: cover !important;\r\n//   }\r\n// `;\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background-color: var(--black);\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\r\n}\r\n\r\n* {\r\n    border-radius: 0 !important;\r\n    box-shadow: none !important;\r\n}\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    height: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '90px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Nft = () => {\r\n  let selectedId = \"0\";\r\n  const [onPresentMerge, onDismissMerge] = useModal(\r\n      <MergeModal\r\n          onConfirm={(value) => {\r\n            onMerge(selectedId, value);\r\n            onDismissMerge();\r\n          }}\r\n          tokenName={'TU'}\r\n      />,\r\n  );\r\n  const classes = useStyles();\r\n  const { account } = useWallet();\r\n  const theoryUnlockers = useFetchTheoryUnlockers();\r\n  const { onUnlockTheory } = useUnlockTheoryWithNFT();\r\n  const { onLevelUp } = useLevelUpTheoryUnlocker();\r\n  const maxLevel = useMaxLevel();\r\n  const { onMerge } = useMergeTheoryUnlocker();\r\n\r\n    return (\r\n    <Page>\r\n      <BackgroundImage />\r\n      {!!account ? (\r\n        <>\r\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\r\n            NFTs\r\n          </Typography>\r\n          <Alert variant=\"filled\" severity=\"info\" style={{ marginTop: '50px' }}>\r\n            You can view, mint, and merge your NFTs, as well as unlock LTHEORY using your NFTs, here.\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"info\" style={{ marginTop: '50px' }}>\r\n            Every 15 days starting on {(new Date('2022-03-28T12:00:00Z')).toString()}, 5 more levels will be unlocked until max level 50.\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"warning\" style={{ marginTop: '50px' }}>\r\n            Your NFT will stay the color it was when you minted it. Certain colors will get certain perks, but you will not be limited in your unlock potential by choosing a lesser color.\r\n            Merging two NFTs will create an NFT that has the color of the FIRST NFT you selected.\r\n            The colors of the NFTs are as follows: Level 1-19 = Bronze, Level 20-39: Silver, Level 40-49: Gold, Level 50: Platinum. Check the docs for the images.\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"warning\" style={{ marginTop: '50px' }}>\r\n            Each level costs 500 DAI. This means that: Level 1 = 500 DAI, Level 5 = 2,500 DAI, Level 10 = 5000 DAI, Level 15 = 7500 DAI, Level 20 = 10,000 DAI,\r\n            Level 25 =12,500 DAI, Level 30 = 15,000 DAI, Level 35 = 17,500 DAI, Level 40 = 20,000 DAI, Level 45 = 22,500 DAI,\r\n            Level 50 = 25,000 DAI.\r\n          </Alert>\r\n          <Alert variant=\"filled\" severity=\"warning\" style={{ marginTop: '50px' }}>\r\n            You can only unlock NEWLY locked rewards. Each level of NFT unlocks 1% of your newly locked rewards. Once you use ANY NFT to unlock, you can no longer unlock those rewards with an NFT of the same type. Use the Unlock button in My Wallet to automatically choose the best NFT to use.\r\n          </Alert>\r\n\r\n\r\n            <Box mt={4}>\r\n              <StyledCardWrapper>\r\n                <Mint />\r\n              </StyledCardWrapper>\r\n            </Box>\r\n          {\r\n            theoryUnlockers.map((item, index)=>{\r\n              let time = item.timeLeftToLevel.toNumber();\r\n              let days        = Math.floor(time/24/60/60);\r\n              let hoursLeft   = Math.floor((time) - (days*86400));\r\n              let hours       = Math.floor(hoursLeft/3600);\r\n              let minutesLeft = Math.floor((hoursLeft) - (hours*3600));\r\n              let minutes     = Math.ceil(minutesLeft/60);\r\n              if(minutes === 0) minutes = 1; //Never show 0 minutes.\r\n              //let seconds     = time % 60;\r\n\r\n              return (<Box key={index} mt={4}>\r\n            <StyledCardWrapper>\r\n              <Box>\r\n                <Card>\r\n                  <CardContent>\r\n                    <StyledCardContentInner>\r\n                      <Label text={`Theory Unlocker #${item.token_id} (${item.attributes[0].value} Level ${item.level})`} />\r\n                      <StyledActionSpacer/>\r\n                      <ReactPlayer url={item.animation_url} controls={false} muted={true} playing={true} loop={true} />\r\n                      <StyledActionSpacer/>\r\n                      <Button color=\"primary\" variant=\"contained\" disabled={item.unlockAmount.eq(0)} onClick={()=>onUnlockTheory(item.token_id)} >{`Unlock ${getDisplayBalance(item.unlockAmount)} LTHEORY Using This NFT`}</Button>\r\n                      <StyledActionSpacer/>\r\n                      <Button color=\"primary\" variant=\"contained\" disabled={!item.timeLeftToLevel.eq(0) || item.level.gte(maxLevel)} onClick={()=>onLevelUp(item.token_id)} >{\r\n                        item.level.eq(maxLevel) ? (\"Current max level reached\") :\r\n                        (item.timeLeftToLevel.eq(0) ? `Level Up to Level ${item.level.add(1).toNumber()}` : `${days.toLocaleString('en-US', {minimumIntegerDigits: 2,useGrouping: false})}:${hours.toLocaleString('en-US', {minimumIntegerDigits: 2,useGrouping: false})}:${minutes.toLocaleString('en-US', {minimumIntegerDigits: 2,useGrouping: false})} (D:H:M) left until next level up`)}</Button>\r\n                      <StyledActionSpacer/>\r\n                      <Button color=\"primary\" variant=\"contained\" disabled={theoryUnlockers.length <= 1} onClick={() => {\r\n                        selectedId = item.token_id\r\n                        onPresentMerge();\r\n                      }} >{`Merge`}</Button>\r\n                    </StyledCardContentInner>\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n            </StyledCardWrapper>\r\n            </Box>);})\r\n          }\r\n        </>\r\n      ) : (\r\n        <UnlockWallet />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst StyledBoardroom = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`;\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport default Nft;\r\n"],"sourceRoot":""}