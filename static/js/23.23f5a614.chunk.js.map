{"version":3,"sources":["hooks/useCashPriceInLastTWAP.ts","../node_modules/@mui/icons-material/ArrowForwardRounded.js","components/Label/Label.tsx","views/Pit/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Pit/components/ExchangeCard.tsx","hooks/useBondsPurchasable.ts","tomb-finance/constants.ts","views/Pit/Pit.tsx","components/TokenInput/TokenInput.tsx","../node_modules/@mui/icons-material/QuestionMark.js"],"names":["useCashPriceInLastTWAP","useState","BigNumber","from","price","setPrice","tombFinance","useTombFinance","fetchCashPrice","useCallback","a","getTombPriceInLastTWAP","useEffect","catch","err","console","error","stack","refreshInterval","setInterval","config","clearInterval","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","Label","labelColor","text","customColor","variant","color","ExchangeModal","max","title","description","onConfirm","onDismiss","action","tokenName","val","setVal","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","TokenInput","onSelectMax","onChange","symbol","ModalActions","Button","onClick","DEFAULT_ERROR_MSG","useCatchError","addPopup","useAddPopup","promise","message","includes","useStyles","makeStyles","theme","button","width","height","fontSize","padding","minWidth","boxed","position","display","flexDirection","marginTop","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabled","disabledDescription","undefined","catchError","Treasury","contracts","useApprove","address","approveStatus","approve","balance","useTokenBalance","useModal","gt","onPresent","classes","handleRewardsClose","onCloseRewards","Typography","style","fontWeight","fullWidth","onHandleRewards","Card","className","CardContent","marginBottom","marginLeft","Grid","container","justifyContent","spacing","alignItems","item","xs","textAlign","Box","TokenSymbol","component","ApprovalState","APPROVED","PENDING","UNKNOWN","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","DECIMALS_18","pow","BOND_REDEEM_PRICE_BN","mul","div","section","boxClear","border","boxShadow","paddingBottom","Pit","path","useRouteMatch","account","useWallet","addTransaction","useTransactionAdder","bondStat","useBondStats","cashPrice","bondsPurchasable","rebateStats","useTreasury","slowRefresh","useRefresh","bondBalance","HODL","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","isBondPurchasable","tokenInFtm","hodlPrice","getDisplayBalance","Page","align","exact","md","TOMB","eq","maxBondSellBN","UnlockWallet","StyledTokenInput","styled","StyledTokenAdornmentWrapper","StyledMaxText","styleButton","borderTopLeftRadius","borderBottomLeftRadius","toLocaleString","Input","endAdornment","size","placeholder"],"mappings":"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","file":"static/js/23.23f5a614.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\nimport { BigNumber } from 'ethers';\r\n\r\nconst useCashPriceInLastTWAP = () => {\r\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  const fetchCashPrice = useCallback(async () => {\r\n    setPrice(await tombFinance?.getTombPriceInLastTWAP());\r\n  }, [tombFinance]);\r\n\r\n  useEffect(() => {\r\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch TOMB price: ${err.stack}`));\r\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\r\n    return () => clearInterval(refreshInterval);\r\n  }, [setPrice, tombFinance, fetchCashPrice]);\r\n\r\n  return price;\r\n};\r\n\r\nexport default useCashPriceInLastTWAP;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 13h11.17l-4.88 4.88c-.39.39-.39 1.03 0 1.42.39.39 1.02.39 1.41 0l6.59-6.59c.39-.39.39-1.02 0-1.41l-6.58-6.6a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41L16.17 11H5c-.55 0-1 .45-1 1s.45 1 1 1z\"\n}), 'ArrowForwardRounded');\n\nexports.default = _default;","import React from 'react';\r\n\r\ninterface LabelProps {\r\n  text?: string;\r\n  variant?: 'primary' | 'secondary' | 'normal';\r\n  color?: string;\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, variant = 'secondary', color: customColor }) => {\r\n\r\n  let labelColor: string;\r\n  if (customColor) {\r\n    labelColor = customColor;\r\n  } else {\r\n    labelColor = 'var(--white)'; //color.grey[300];\r\n  }\r\n  return <div color={labelColor}>{text}</div>;\r\n};\r\n\r\nexport default Label;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\nimport TokenInput from '../../../components/TokenInput';\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\r\nimport { BigNumber } from 'ethers';\r\nimport Label from '../../../components/Label';\r\n\r\ninterface ExchangeModalProps extends ModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  title: string;\r\n  description: string;\r\n  action: string;\r\n  tokenName: string;\r\n}\r\n\r\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\r\n  max,\r\n  title,\r\n  description,\r\n  onConfirm,\r\n  onDismiss,\r\n  action,\r\n  tokenName,\r\n}) => {\r\n  const [val, setVal] = useState('');\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\r\n\r\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal text={title} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <Label text={description} />\r\n      <ModalActions>\r\n        <Button variant=\"contained\" onClick={onDismiss}>Cancel</Button>\r\n        <Button variant='contained' onClick={() => onConfirm(val)}>{action}</Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExchangeModal;\r\n","import { useCallback } from 'react';\r\nimport { useAddPopup } from '../state/application/hooks';\r\n\r\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\r\n\r\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\r\n  const addPopup = useAddPopup();\r\n\r\n  return useCallback(\r\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\r\n      promise.catch((err) => {\r\n        if (err.message.includes('User denied')) {\r\n          // User denied transaction signature on MetaMask.\r\n          return;\r\n        }\r\n        console.error(`Uncaught exception: ${err.stack}`);\r\n        addPopup({ error: { message, stack: err.stack } });\r\n      });\r\n    },\r\n    [addPopup],\r\n  );\r\n}\r\n\r\nexport default useCatchError;\r\n","import React from 'react';\r\n\r\nimport { Box, Grid, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport ArrowForwardRoundedIcon from '@mui/icons-material/ArrowForwardRounded';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\n\r\nimport useTombFinance from '../../../hooks/useTombFinance';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useModal from '../../../hooks/useModal';\r\nimport ExchangeModal from './ExchangeModal';\r\nimport ERC20 from '../../../tomb-finance/ERC20';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\r\nimport useCatchError from '../../../hooks/useCatchError';\r\nimport {BigNumber} from \"ethers\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Modal, { ModalProps } from '../../../components/Modal';\r\nimport ModalActions from '../../../components/ModalActions';\r\n\r\ninterface ExchangeCardProps {\r\n  action: string;\r\n  fromToken: ERC20;\r\n  fromTokenName: string;\r\n  toToken: ERC20;\r\n  toTokenName: string;\r\n  priceDesc: string;\r\n  onExchange: (amount: string) => void;\r\n  disabled?: boolean;\r\n  disabledDescription?: string;\r\n  max?: BigNumber;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button : {\r\n    width: '2em',\r\n    height: '2em',\r\n    fontSize: '14px',\r\n    padding: '0',\r\n    minWidth: 'auto'\r\n  },\r\n  boxed : {\r\n    '& > *': {\r\n      position: 'relative',\r\n      height: 'calc(100% - 60px)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      '& .buttonWrap': {\r\n        marginTop: 'auto'\r\n      }\r\n    },\r\n  }\r\n}));\r\n\r\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\r\n  action,\r\n  fromToken,\r\n  fromTokenName,\r\n  toToken,\r\n  toTokenName,\r\n  priceDesc,\r\n  onExchange,\r\n  disabled = false,\r\n  disabledDescription,\r\n  max = undefined\r\n}) => {\r\n  const catchError = useCatchError();\r\n  const {\r\n    contracts: { Treasury },\r\n  } = useTombFinance();\r\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\r\n  const balance = useTokenBalance(fromToken);\r\n  const [onPresent, onDismiss] = useModal(\r\n    <ExchangeModal\r\n      title={action}\r\n      description={priceDesc}\r\n      max={max == undefined ? balance : (balance.gt(max) ? max : balance)}\r\n      onConfirm={(value) => {\r\n        onExchange(value);\r\n        onDismiss();\r\n      }}\r\n      action={action}\r\n      tokenName={fromTokenName}\r\n    />,\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleRewardsClose = () => {\r\n    onCloseRewards();\r\n  };\r\n\r\n  const [onHandleRewards, onCloseRewards] = useModal(\r\n    <Modal text={action === 'Purchase' ? 'Purchase HODL' : 'Reedem GAME'} onDismiss={handleRewardsClose}>\r\n      <Typography variant=\"h6\" color=\"#fff\" style={{fontWeight: '500'}}>\r\n        {action === 'Purchase' ? (\r\n          <>\r\n            When the TWAP of GAME tokens is under $1.01, you can exchange GAME tokens for HODL tokens. The GAME tokens exchanged are then burned, thereby reducing the supply.<br /><br />\r\n\r\n            <strong>TWAP</strong><br />Time-Weighted Average Price of GAME during the course of the previous Round.\r\n            </>\r\n        ) : (\r\n          <>\r\n            When the TWAP of GAME tokens is above $1.01, you can redeem your HODL tokens for GAME tokens at a premium.<br /><br />\r\n\r\n            <strong>TWAP</strong><br />Time-Weighted Average Price of GAME during the course of the previous Round.\r\n          </>\r\n        )}\r\n      </Typography>\r\n      <ModalActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleRewardsClose} fullWidth>\r\n          Close\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.boxed}>\r\n      <CardContent>\r\n\r\n        <Typography variant='h4' className=\"kallisto\" style={{marginBottom: '20px'}}>\r\n          {action} {toTokenName}\r\n          <Button variant=\"contained\" className={classes.button} aria-label=\"More info\" style={{ marginLeft: '10px' }} onClick={onHandleRewards}>\r\n            <QuestionMarkIcon fontSize='inherit' />\r\n          </Button>\r\n        </Typography>\r\n\r\n        <Grid container justifyContent=\"center\" spacing={3} alignItems=\"center\" style={{marginBottom: '50px'}}>\r\n          <Grid item xs={'auto'} style={{textAlign: 'center'}}>\r\n            <Box>\r\n              <TokenSymbol symbol={fromToken.symbol} />\r\n              <Typography variant='body1' component=\"p\" style={{marginTop: '10px'}}>{fromTokenName}</Typography>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={'auto'} style={{textAlign: 'center'}}>\r\n            <ArrowForwardRoundedIcon className=\"pinkGlow\" style={{fontSize: '34px'}} />\r\n          </Grid>\r\n\r\n          <Grid item xs={'auto'} style={{textAlign: 'center'}}>\r\n            <TokenSymbol symbol={toToken.symbol} />\r\n            <Typography variant='body1' component=\"p\" style={{marginTop: '10px'}}>{toTokenName}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box className=\"buttonWrap\">\r\n\r\n          <Typography variant='body2' style={{marginBottom: '20px'}}>\r\n            {priceDesc}\r\n          </Typography>\r\n\r\n          {approveStatus !== ApprovalState.APPROVED && !disabled ? (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\r\n                onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\r\n              >\r\n                {`Approve ${fromTokenName}`}\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"primary\" variant=\"contained\" onClick={onPresent} disabled={disabled}>\r\n                {disabledDescription || action}\r\n              </Button>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExchangeCard;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { BigNumber } from 'ethers';\r\nimport ERC20 from '../tomb-finance/ERC20';\r\nimport useTombFinance from './useTombFinance';\r\nimport config from '../config';\r\n\r\nconst useBondsPurchasable = () => {\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const tombFinance = useTombFinance();\r\n\r\n  useEffect(() => {\r\n    async function fetchBondsPurchasable() {\r\n        try {\r\n            setBalance(await tombFinance?.getBondsPurchasable());\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n        }\r\n      }\r\n    fetchBondsPurchasable();\r\n  }, [setBalance, tombFinance]);\r\n\r\n  return balance;\r\n};\r\n\r\nexport default useBondsPurchasable;\r\n","import { BigNumber } from 'ethers';\r\n\r\nexport const DECIMALS_18 = BigNumber.from(10).pow(18);\r\n\r\nexport const BOND_REDEEM_PRICE = 1.01;\r\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { useWallet } from 'use-wallet';\r\nimport UnlockWallet from '../../components/UnlockWallet';\r\nimport ExchangeCard from './components/ExchangeCard';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\r\nimport { Typography, Grid } from '@mui/material';\r\nimport useRefresh from \"../../hooks/useRefresh\";\r\nimport useTreasury from \"../../hooks/useTreasury\";\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n  boxClear: {\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    '& > *': {\r\n      padding: '0',\r\n      '&:last-child': {\r\n        paddingBottom: '0'\r\n      }\r\n    },\r\n  },\r\n}));\r\n\r\nconst Pit: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { path } = useRouteMatch();\r\n  const { account } = useWallet();\r\n  const tombFinance = useTombFinance();\r\n  const addTransaction = useTransactionAdder();\r\n  const bondStat = useBondStats();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const bondsPurchasable = useBondsPurchasable();\r\n  const rebateStats = useTreasury();\r\n  const  { slowRefresh } = useRefresh();\r\n\r\n  const bondBalance = useTokenBalance(tombFinance?.HODL);\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance?.buyBonds(amount);\r\n      addTransaction(tx, {\r\n        summary: `Buy ${Number(amount).toFixed(2)} HODL with ${amount} TOMB`,\r\n      });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount: string) => {\r\n      const tx = await tombFinance?.redeemBonds(amount);\r\n      addTransaction(tx, { summary: `Redeem ${amount} HODL` });\r\n    },\r\n    [tombFinance, addTransaction],\r\n  );\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice, slowRefresh]);\r\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat, slowRefresh]);\r\n\r\n  const hodlPrice = getDisplayBalance(bondBalance) + ' HODL';\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        {!!account ? (\r\n          <>\r\n            <div className={classes.section}>\r\n            <Typography align=\"center\" variant=\"h2\" component=\"h1\" className=\"textGlow pink\" style={{marginBottom: '20px'}}>\r\n              HODL (Bonds)\r\n            </Typography>\r\n            <Route exact path={path}>\r\n              <Typography align=\"center\" variant=\"h5\" component=\"p\" style={{marginBottom: '50px', fontWeight: '500'}}>\r\n                Earn premiums upon redemption\r\n              </Typography>\r\n            </Route>\r\n\r\n            <Grid container justifyContent=\"center\" spacing={3} style={{marginBottom: '20px'}}>\r\n\r\n              <Grid item xs={6} md={4} style={{textAlign: 'center'}}>\r\n                <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">Game Price (TWAP)</Typography>\r\n                  <Typography variant=\"h4\" style={{marginBottom: '20px'}}>\r\n                    {getDisplayBalance(cashPrice, 18, 4)} DAI\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} md={4} style={{textAlign: 'center'}}>\r\n                  <Typography variant=\"body1\" component=\"p\" className=\"textGlow\">HODL Price (Inc Premium)</Typography>\r\n                  <Typography variant=\"h4\" style={{marginBottom: '20px'}}>\r\n                    {Number(bondStat?.tokenInFtm).toFixed(2) || '-'} DAI\r\n                  </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n            <Grid container justifyContent=\"center\" spacing={3} style={{marginBottom: '50px'}}>\r\n\r\n              <Grid item xs={12} md={4} style={{textAlign: 'center'}}>\r\n\r\n                <ExchangeCard\r\n                  action=\"Purchase\"\r\n                  fromToken={tombFinance?.TOMB}\r\n                  fromTokenName=\"GAME\"\r\n                  toToken={tombFinance?.HODL}\r\n                  toTokenName=\"HODL\"\r\n                  priceDesc={\r\n                    !isBondPurchasable\r\n                      ? 'GAME is over peg'\r\n                      : getDisplayBalance(bondsPurchasable, 18, 4)\r\n                  }\r\n                  onExchange={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                />\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4} style={{textAlign: 'center'}}>\r\n\r\n                <ExchangeCard\r\n                  action=\"Redeem\"\r\n                  fromToken={tombFinance?.HODL}\r\n                  fromTokenName=\"HODL\"\r\n                  toToken={tombFinance?.TOMB}\r\n                  toTokenName=\"GAME\"\r\n                  priceDesc={hodlPrice}\r\n                  onExchange={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || rebateStats.maxBondSellBN.eq(0) || !isBondRedeemable}\r\n                  disabledDescription={!isBondRedeemable ? `Enabled when GAME > ${BOND_REDEEM_PRICE} DAI` : null}\r\n                  max={rebateStats.maxBondSellBN}\r\n                />\r\n                  \r\n              </Grid>\r\n              \r\n            </Grid>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <UnlockWallet />\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Pit;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from '@mui/material';\r\nimport Input, { InputProps } from '../Input';\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string;\r\n  symbol: string;\r\n  onSelectMax?: () => void;\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText className=\"textGlow\">\r\n        {max.toLocaleString()} {symbol} Available\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\r\n            <Button style={styleButton} size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\r\n              Max\r\n            </Button>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  );\r\n};\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``;\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div``;\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst styleButton = {\r\n  height: '56px',\r\n  borderTopLeftRadius: '0',\r\n  borderBottomLeftRadius: '0'\r\n};\r\n\r\nexport default TokenInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.07 12.85c.77-1.39 2.25-2.21 3.11-3.44.91-1.29.4-3.7-2.18-3.7-1.69 0-2.52 1.28-2.87 2.34L6.54 6.96C7.25 4.83 9.18 3 11.99 3c2.35 0 3.96 1.07 4.78 2.41.7 1.15 1.11 3.3.03 4.9-1.2 1.77-2.35 2.31-2.97 3.45-.25.46-.35.76-.35 2.24h-2.89c-.01-.78-.13-2.05.48-3.15zM14 20c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'QuestionMark');\n\nexports.default = _default;"],"sourceRoot":""}