{"version":3,"sources":["views/Leaderboards/Leaderboards.js"],"names":["useStyles","require","makeStyles","theme","button","width","display","marginTop","section","padding","heading","maxWidth","margin","fontWeight","box","borderRadius","boxShadow","Leaderboards","useTombFinance","stats","useAltergeneStats","Page","Grid","item","xs","sm","Card","CardContent","align","style","highScoreList","highestLevelScore","enemiesDefeated","levelReached","powerupsCollected","topSpender","dailyEnemiesDefeated"],"mappings":"iWAgCMA,GALDC,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MAGKC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,MAAO,OACPC,QAAS,QACTC,UAAW,QAEbC,QAAS,CACPC,QAAS,UACT,4BAA6B,CAC3BA,QAAS,WAGbC,QAAS,CACPC,SAAU,OACVN,MAAO,QACPO,OAAQ,SACRC,WAAY,OAEdC,IAAK,CACH,QAAS,CACPR,QAAS,eACTD,MAAO,OACPU,aAAc,OACdC,UAAW,+CA+EFC,EA1EM,WACHjB,IACIkB,cADpB,IAEMC,EAAQC,cAQd,OACE,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAaC,MAAM,SAAnB,UACE,iDACA,qBAAIC,MAAO,CAACtB,UAAU,QAAtB,UACE,oCAAKY,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,KAC1B,oCAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAOW,cAAc,eAKpC,cAACR,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAaC,MAAM,SAAnB,UACE,gDACA,qBAAIC,MAAO,CAACtB,UAAU,QAAtB,UACE,2CACA,8DAA0BY,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOY,qBACjC,gEAA4BZ,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOa,mBACnC,gEAA4Bb,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOc,gBACnC,kEAA8Bd,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOe,qBACrC,sDAAkBf,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOgB,cACzB,6BAAI,yBACJ,wCACA,gEAA4BhB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOiB,kCAK3C,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAaC,MAAM,SAAnB,UACE,4CACA,qBAAIC,MAAO,CAACtB,UAAU,QAAtB,UACE,2CACA,sDACA,+DACA,iEACA,iEACA,mEACA,mFACd,6BAAI,yBACU,wCACA,sDACA","file":"static/js/36.a562a410.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Typography } from '@mui/material';\r\nimport CountUp from 'react-countup';\r\nimport CardIcon from '../../components/CardIcon';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport useTombStats from '../../hooks/useTombStats';\r\nimport useLpStats from '../../hooks/useLpStats';\r\nimport useModal from '../../hooks/useModal';\r\nimport useZap from '../../hooks/useZap';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport usetShareStats from '../../hooks/usetShareStats';\r\nimport useTotalValueLocked from '../../hooks/useTotalValueLocked';\r\nimport useFantomPrice from '../../hooks/useFantomPrice';\r\nimport { game as tombTesting, theory as tShareTesting } from '../../tomb-finance/deployments/deployments.testing.json';\r\nimport { game as tombProd, theory as tShareProd } from '../../tomb-finance/deployments/deployments.mainnet.json';\r\n\r\nimport useTotalTreasuryBalance from '../../hooks/useTotalTreasuryBalance.js';\r\n\r\nimport { Box, Button, Card, CardContent, Grid, Paper } from '@mui/material';\r\nimport ZapModal from '../Bank/components/ZapModal';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport useTombFinance from '../../hooks/useTombFinance';\r\nimport useAltergeneStats from \"../../hooks/useAltergeneStats\";\r\n\r\nconst numImg = {\r\n  1: require('../../assets/img/01.png'),\r\n  2: require('../../assets/img/02.png'),\r\n  3: require('../../assets/img/03.png'),\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    width: '100%',\r\n    display: 'block',\r\n    marginTop: '40px'\r\n  },\r\n  section: {\r\n    padding: '100px 0',\r\n    '@media (max-width: 767px)': {\r\n      padding: '40px 0'\r\n    }\r\n  },\r\n  heading: {\r\n    maxWidth: '100%',\r\n    width: '500px',\r\n    margin: '0 auto',\r\n    fontWeight: '500'\r\n  },\r\n  box: {\r\n    '& > *': {\r\n      display: 'inline-block',\r\n      width: '60px',\r\n      borderRadius: '100%',\r\n      boxShadow: '0px 0px 20px 0px var(--extra-color-1)'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Leaderboards = () => {\r\n  const classes = useStyles();\r\n  const tombFinance = useTombFinance();\r\n  const stats = useAltergeneStats();\r\n\r\n  // function to convert string to number with commas\r\n  const numberWithCommas = (x) => {\r\n    if(x === null) return x;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n        <Grid item xs={12} sm={4}>\r\n          <Card>\r\n            <CardContent align=\"center\">\r\n              <strong>High Scores</strong>\r\n              <ul style={{marginTop:'10px'}}>\r\n                <li>{stats?.highScoreList[0]}</li>\r\n                <li>{stats?.highScoreList[1]}</li>\r\n                <li>{stats?.highScoreList[2]}</li>\r\n                <li>{stats?.highScoreList[3]}</li>\r\n                <li>{stats?.highScoreList[4]}</li>\r\n                <li>{stats?.highScoreList[5]}</li>\r\n                <li>{stats?.highScoreList[6]}</li>\r\n                <li>{stats?.highScoreList[7]}</li>\r\n                <li>{stats?.highScoreList[8]}</li>\r\n                <li>{stats?.highScoreList[9]}</li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Card>\r\n          <CardContent align=\"center\">\r\n            <strong>Challenges</strong>\r\n            <ul style={{marginTop:'10px'}}>\r\n              <li>Seasonal:</li>\r\n              <li>Highest Level Score: {stats?.highestLevelScore}</li>\r\n              <li>Most Enemies Defeated: {stats?.enemiesDefeated}</li>\r\n              <li>Highest Level Reached: {stats?.levelReached}</li>\r\n              <li>Most Powerups Collected: {stats?.powerupsCollected}</li>\r\n              <li>Top Spender: {stats?.topSpender}</li>\r\n              <li><br/></li>\r\n              <li>Daily:</li>\r\n              <li>Most Enemies Defeated: {stats?.dailyEnemiesDefeated}</li>\r\n            </ul>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Card>\r\n          <CardContent align=\"center\">\r\n            <strong>Prizes</strong>\r\n            <ul style={{marginTop:'10px'}}>\r\n              <li>Seasonal:</li>\r\n              <li>High Score: 500 GAME</li>\r\n              <li>Highest Level Score: 250 GAME</li>\r\n              <li>Most Enemies Defeated: 300 GAME</li>\r\n              <li>Highest Level Reached: 250 GAME</li>\r\n              <li>Most Powerups Collected: 250 GAME</li>\r\n              <li>Top Spender: 30% back, 50% back if holding an NFT</li>\r\n<li><br/></li>\r\n              <li>Daily:</li>\r\n              <li>Random User: 50 GAME</li>\r\n              <li>Most Enemies Defeated: 50 GAME</li>\r\n            </ul>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Leaderboards;\r\n"],"sourceRoot":""}